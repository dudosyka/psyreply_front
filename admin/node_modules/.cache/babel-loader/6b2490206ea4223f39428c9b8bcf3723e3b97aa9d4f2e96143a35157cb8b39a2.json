{"ast":null,"code":"import Metric from '@/api/admin/Metric';\nexport default {\n  name: \"YResultsTabelItem\",\n  props: ['id', 'value'],\n  data() {\n    return {\n      oldValue: null,\n      metricName: null\n    };\n  },\n  created() {\n    this.oldValue = this.value;\n    const metric = new Metric();\n    metric.getOne().then(res => {\n      if (res.ok) {\n        res.json().then(data => data.body).then(r => {\n          r.map(el => {\n            if (el.id == this.id) {\n              this.metricName = el.name;\n            }\n          });\n        });\n      } else {\n        this.metricName = this.id;\n      }\n    });\n  },\n  methods: {\n    changeValue(e) {\n      this.$emit('update:modelValue', e.target.value);\n    }\n  }\n};","map":{"version":3,"mappings":"AASA,OAAOA,MAAK,MAAO,oBAAmB;AAEtC,eAAe;EACbC,IAAI,EAAE,mBAAmB;EACzBC,KAAK,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC;EACtBC,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MACdC,UAAU,EAAE;IACd;EACF,CAAC;EACDC,OAAO,GAAG;IACR,IAAI,CAACF,QAAO,GAAI,IAAI,CAACG,KAAI;IACzB,MAAMC,MAAK,GAAI,IAAIR,MAAM,EAAC;IAC1BQ,MAAM,CAACC,MAAM,EAAC,CACXC,IAAI,CAACC,GAAE,IAAK;MACX,IAAIA,GAAG,CAACC,EAAE,EAAE;QACVD,GAAG,CAACE,IAAI,EAAE,CAACH,IAAI,CAACP,IAAG,IAAKA,IAAI,CAACW,IAAI,CAAC,CAACJ,IAAI,CAACK,KAAK;UAC3CA,CAAC,CAACC,GAAG,CAACC,EAAC,IAAK;YACV,IAAIA,EAAE,CAACC,EAAC,IAAK,IAAI,CAACA,EAAE,EAAE;cACpB,IAAI,CAACb,UAAS,GAAIY,EAAE,CAAChB,IAAG;YAC1B;UACF,CAAC;QACH,CAAC;MACH,OAAO;QACL,IAAI,CAACI,UAAS,GAAI,IAAI,CAACa,EAAC;MAC1B;IACF,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACPC,WAAW,CAACC,CAAC,EAAE;MACb,IAAI,CAACC,KAAK,CAAC,mBAAmB,EAAED,CAAC,CAACE,MAAM,CAAChB,KAAK;IAChD;EACF;AACF","names":["Metric","name","props","data","oldValue","metricName","created","value","metric","getOne","then","res","ok","json","body","r","map","el","id","methods","changeValue","e","$emit","target"],"sourceRoot":"","sources":["/home/yan/Документы/psyreply2.0_front/admin/src/components/UI/YResultsTabelItem.vue"],"sourcesContent":["<template>\n  <div class=\"tabel__item\">\n    <h2 class=\"item__metric\">{{ metricName }}</h2>\n    <h3 class=\"item__status\">{{ oldValue }}</h3>\n    <y-input @input=\"changeValue\" :value=\"value\" type=\"text\"/>\n  </div>\n</template>\n\n<script>\nimport Metric from '@/api/admin/Metric'\n\nexport default {\n  name: \"YResultsTabelItem\",\n  props: ['id', 'value'],\n  data() {\n    return {\n      oldValue: null,\n      metricName: null\n    }\n  },\n  created() {\n    this.oldValue = this.value\n    const metric = new Metric()\n    metric.getOne()\n      .then(res => {\n        if (res.ok) {\n          res.json().then(data => data.body).then(r => {\n            r.map(el => {\n              if (el.id == this.id) {\n                this.metricName = el.name\n              }\n            })\n          })\n        } else {\n          this.metricName = this.id\n        }\n      })\n  },\n  methods: {\n    changeValue(e) {\n      this.$emit('update:modelValue', e.target.value)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.tabel__item{\n  display: grid;\n  grid-template-columns: 4fr 1fr 1fr;\n  align-items: center;\n\n\n\n}\n.item__metric{\n  color:  rgba(255, 255, 255, 0.66);\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-451f2665\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"header\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"heading\"\n}, \"Основная информация\")], -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"heading\"\n}, \"Пользователи в группе\")], -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"heading\"\n}, \"Добавление пользователей в группу\")], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_y_left_arrow_button = _resolveComponent(\"y-left-arrow-button\");\n  const _component_y_input = _resolveComponent(\"y-input\");\n  const _component_y_cool_button = _resolveComponent(\"y-cool-button\");\n  const _component_y_modal = _resolveComponent(\"y-modal\");\n  const _component_y_list = _resolveComponent(\"y-list\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"header\", _hoisted_1, [_createVNode(_component_y_left_arrow_button, {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('close'))\n  }), _createElementVNode(\"h1\", null, \"Редактирование группы \" + _toDisplayString($data.group.name), 1 /* TEXT */)]), _createVNode(_component_y_modal, {\n    class: \"block\"\n  }, {\n    default: _withCtx(() => [_hoisted_2, _createVNode(_component_y_input, {\n      placeholder: \"Название\",\n      modelValue: $data.group.name,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.group.name = $event),\n      modelModifiers: {\n        trim: true\n      }\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_y_cool_button, {\n      onClick: $options.addUsers\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Сохранить\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_y_modal, {\n    class: \"block\"\n  }, {\n    default: _withCtx(() => [_hoisted_3, _createVNode(_component_y_list, {\n      items: $data.group.users,\n      \"key-of-name\": \"login\",\n      \"show-id\": \"jetBotId\",\n      selectable: true,\n      onSelect: $options.selectUser\n    }, null, 8 /* PROPS */, [\"items\", \"onSelect\"]), $data.group.users.length > 1 ? (_openBlock(), _createBlock(_component_y_cool_button, {\n      key: 0,\n      onClick: $options.deleteFromGroup\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Удалить выбранных из группы\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_y_modal, {\n    class: \"block\"\n  }, {\n    default: _withCtx(() => [_hoisted_4, _createVNode(_component_y_list, {\n      items: $data.users,\n      \"key-of-name\": \"login\",\n      \"show-id\": \"jetBotId\",\n      selectable: true,\n      onSelect: $options.selectUser\n    }, null, 8 /* PROPS */, [\"items\", \"onSelect\"]), $data.users.length > 1 ? (_openBlock(), _createBlock(_component_y_cool_button, {\n      key: 0,\n      onClick: $options.addUsers\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Добавить\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_y_cool_button, {\n    onClick: $options.remove\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Удалить\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EACUA,KAAK,EAAC;AAAQ;gEAOpBC,oBAES,8BADPA,oBAA4C;EAAxCD,KAAK,EAAC;AAAS,GAAC,qBAAmB;gEAQzCC,oBAES,8BADPA,oBAA8C;EAA1CD,KAAK,EAAC;AAAS,GAAC,uBAAqB;gEAc3CC,oBAES,8BADPA,oBAA0D;EAAtDD,KAAK,EAAC;AAAS,GAAC,mCAAiC;;;;;;;;6DAhCzDC,oBAGS,UAHTC,UAGS,GAFPC,aAA+CC;IAAzBC,OAAK,sCAAEC,UAAK;MAClCL,oBAA6C,YAAzC,wBAAsB,oBAAEM,WAAK,CAACC,IAAI,oBAExCL,aAQUM;IAPNT,KAAK,EAAC;EAAO;sBAEf,MAES,CAFTU,UAES,EACTP,aAA4DQ;MAAnDC,WAAW,EAAC,UAAU;kBAAeL,WAAK,CAACC,IAAI;iEAAVD,WAAK,CAACC,IAAI;sBAAxB;QAAAK;MAAA;6CAChCV,aAA0DW;MAA1CT,OAAK,EAAEU;IAAQ;wBAAE,MAAS,kBAAT,WAAS;;;;MAE5CZ,aAcUM;IAbNT,KAAK,EAAC;EAAO;sBAEf,MAES,CAFTgB,UAES,EACTb,aAMEc;MALGC,KAAK,EAAEX,WAAK,CAACY,KAAK;MACnB,aAAW,EAAC,OAAO;MACnB,SAAO,EAAC,UAAU;MACjBC,UAAU,EAAE,IAAI;MAChBC,QAAM,EAAEN;oDAEQR,WAAK,CAACY,KAAK,CAACG,MAAM,sBAAvCC,aAAiHT;;MAAnET,OAAK,EAAEU;;wBAAiB,MAA2B,kBAA3B,6BAA2B;;;;MAEnGZ,aAcUM;IAbNT,KAAK,EAAC;EAAO;sBAEf,MAES,CAFTwB,UAES,EACTrB,aAMEc;MALGC,KAAK,EAAEX,WAAK;MACb,aAAW,EAAC,OAAO;MACnB,SAAO,EAAC,UAAU;MACjBa,UAAU,EAAE,IAAI;MAChBC,QAAM,EAAEN;oDAEQR,WAAK,CAACe,MAAM,sBAAjCC,aAAiFT;;MAAzCT,OAAK,EAAEU;;wBAAU,MAAQ,kBAAR,UAAQ;;;;MAEnEZ,aAAsDW;IAAtCT,OAAK,EAAEU;EAAM;sBAAE,MAAO,kBAAP,SAAO","names":["class","_createElementVNode","_hoisted_1","_createVNode","_component_y_left_arrow_button","onClick","_ctx","$data","name","_component_y_modal","_hoisted_2","_component_y_input","placeholder","trim","_component_y_cool_button","$options","_hoisted_3","_component_y_list","items","users","selectable","onSelect","length","_createBlock","_hoisted_4"],"sourceRoot":"","sources":["/home/yan/Документы/psyreply2.0_front/admin/src/components/Group/EditGroup.vue"],"sourcesContent":["<template>\n  <header class=\"header\">\n    <y-left-arrow-button @click=\"$emit('close')\" />\n    <h1>Редактирование группы {{group.name}}</h1>\n  </header>\n  <y-modal\n      class=\"block\"\n  >\n    <header>\n      <h2 class=\"heading\">Основная информация</h2>\n    </header>\n    <y-input placeholder=\"Название\" v-model.trim=\"group.name\" />\n    <y-cool-button @click=\"addUsers\">Сохранить</y-cool-button>\n  </y-modal>\n  <y-modal\n      class=\"block\"\n  >\n    <header>\n      <h2 class=\"heading\">Пользователи в группе</h2>\n    </header>\n    <y-list\n        :items=\"group.users\"\n        key-of-name=\"login\"\n        show-id=\"jetBotId\"\n        :selectable=\"true\"\n        @select=\"selectUser\"\n    />\n    <y-cool-button v-if=\"group.users.length > 1\" @click=\"deleteFromGroup\">Удалить выбранных из группы</y-cool-button>\n  </y-modal>\n  <y-modal\n      class=\"block\"\n  >\n    <header>\n      <h2 class=\"heading\">Добавление пользователей в группу</h2>\n    </header>\n    <y-list\n        :items=\"users\"\n        key-of-name=\"login\"\n        show-id=\"jetBotId\"\n        :selectable=\"true\"\n        @select=\"selectUser\"\n    />\n    <y-cool-button v-if=\"users.length > 1\" @click=\"addUsers\">Добавить</y-cool-button>\n  </y-modal>\n  <y-cool-button @click=\"remove\">Удалить</y-cool-button>\n</template>\n\n<script>\nimport User from \"@/api/admin/User\";\nimport Group from \"@/api/admin/Group\";\nimport Company from \"@/api/admin/Company\";\nimport mainConf, {ProjectState} from \"../../../../main.conf\";\n\nexport default {\n  name: \"EditGroup\",\n  data() {\n    return {\n      company: {},\n      group: {},\n      users: [],\n      inGroupUsers: []\n    }\n  },\n  async created() {\n    await this.update();\n  },\n  methods: {\n    async update() {\n      this.company = this.$store.state.company;\n      this.group = this.$store.state.group;\n\n      const user = new User();\n\n      this.users = (await user.getAll({\n        except_group_id: this.group.id\n      })).map(el => {\n        el.active = false;\n        return el;\n      });\n      this.group.users = this.group.users.map(el => {\n        el.active = false;\n        return el;\n      })\n    },\n    selectUser(n) {\n      n.active = !n.active;\n    },\n    deleteFromGroup() {\n      const group = new Group();\n      const users = this.group.users.filter(el => el.active).map(el => el.id);\n      if (mainConf.projectState === ProjectState.dev)\n        console.log(this.group.id, users);\n      group.removeUsers(this.group.id, users).then(res => {\n        const company = new Company();\n        company.get(this.company.id, res => res.json().then(data => data.body)).then(company => {\n          this.$store.commit('setEditCompany', company);\n          this.$store.commit('setEditGroup', company.groups.filter(el => el.id == this.group.id)[0])\n          this.update();\n        })\n      });\n    },\n    addUsers() {\n      const group = new Group();\n      const users = this.users.filter(el => el.active).map(el => parseInt(el.id));\n      if (mainConf.projectState === ProjectState.dev)\n        console.log(this.group.id, users)\n      group.update(this.group.id, {\n        name: this.group.name,\n        users\n      }).then(res => {\n        const company = new Company();\n        company.get(this.company.id, res => res.json().then(data => data.body)).then(company => {\n          this.$store.commit('setEditCompany', company);\n          this.$store.commit('setEditGroup', company.groups.filter(el => el.id == this.group.id)[0])\n          this.update();\n        })\n      });\n    },\n    remove() {\n      const group = new Group();\n      group.remove(this.group.id).then(res => {\n        const company = new Company();\n        company.get(this.company.id, res => res.json().then(data => data.body)).then(company => {\n          this.$store.commit('setEditCompany', company);\n          this.$store.commit('setEditGroup', null)\n          this.$emit('close');\n        })\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.header {\n  display: grid;\n  grid-template-columns: auto max-content;\n  justify-content: left;\n  grid-gap: 1rem;\n}\n.block {\n  display: grid;\n  grid-gap: .5rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7a0f15b3\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"header\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"heading\"\n}, \"Основная информация\")], -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"heading\"\n}, \"Добавление пользователей в группу\")], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_y_left_arrow_button = _resolveComponent(\"y-left-arrow-button\");\n  const _component_y_input = _resolveComponent(\"y-input\");\n  const _component_y_modal = _resolveComponent(\"y-modal\");\n  const _component_y_list = _resolveComponent(\"y-list\");\n  const _component_y_cool_button = _resolveComponent(\"y-cool-button\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"header\", _hoisted_1, [_createVNode(_component_y_left_arrow_button, {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('close'))\n  }), _createElementVNode(\"h1\", null, \"Создание новой группы в \" + _toDisplayString($data.company.name), 1 /* TEXT */)]), _createVNode(_component_y_modal, {\n    class: \"block\"\n  }, {\n    default: _withCtx(() => [_hoisted_2, _createVNode(_component_y_input, {\n      placeholder: \"Название\",\n      modelValue: $data.group.name,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.group.name = $event),\n      modelModifiers: {\n        trim: true\n      }\n    }, null, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_y_modal, {\n    class: \"block\"\n  }, {\n    default: _withCtx(() => [_hoisted_3, _createVNode(_component_y_list, {\n      items: $data.users,\n      \"key-of-name\": \"login\",\n      \"show-id\": \"jetBotId\",\n      selectable: true,\n      onSelect: $options.selectUser\n    }, null, 8 /* PROPS */, [\"items\", \"onSelect\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_y_cool_button, {\n    onClick: $options.create\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Сохранить\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EACUA,KAAK,EAAC;AAAQ;gEAOpBC,oBAES,8BADPA,oBAA4C;EAAxCD,KAAK,EAAC;AAAS,GAAC,qBAAmB;gEAOzCC,oBAES,8BADPA,oBAA0D;EAAtDD,KAAK,EAAC;AAAS,GAAC,mCAAiC;;;;;;;;6DAhBzDC,oBAGS,UAHTC,UAGS,GAFPC,aAA+CC;IAAzBC,OAAK,sCAAEC,UAAK;MAClCL,oBAAiD,YAA7C,0BAAwB,oBAAEM,aAAO,CAACC,IAAI,oBAE5CL,aAOUM;IANRT,KAAK,EAAC;EAAO;sBAEb,MAES,CAFTU,UAES,EACTP,aAA4DQ;MAAnDC,WAAW,EAAC,UAAU;kBAAeL,WAAK,CAACC,IAAI;iEAAVD,WAAK,CAACC,IAAI;sBAAxB;QAAAK;MAAA;;;MAElCV,aAaUM;IAZRT,KAAK,EAAC;EAAO;sBAEb,MAES,CAFTc,UAES,EACTX,aAMEY;MALGC,KAAK,EAAET,WAAK;MACb,aAAW,EAAC,OAAO;MACnB,SAAO,EAAC,UAAU;MACjBU,UAAU,EAAE,IAAI;MAChBC,QAAM,EAAEC;;;MAGfhB,aAAwDiB;IAAxCf,OAAK,EAAEc;EAAM;sBAAE,MAAS,kBAAT,WAAS","names":["class","_createElementVNode","_hoisted_1","_createVNode","_component_y_left_arrow_button","onClick","_ctx","$data","name","_component_y_modal","_hoisted_2","_component_y_input","placeholder","trim","_hoisted_3","_component_y_list","items","selectable","onSelect","$options","_component_y_cool_button"],"sourceRoot":"","sources":["/home/yan/Документы/psyreply2.0_front/admin/src/components/Group/CreateGroup.vue"],"sourcesContent":["<template>\n  <header class=\"header\">\n    <y-left-arrow-button @click=\"$emit('close')\" />\n    <h1>Создание новой группы в {{company.name}}</h1>\n  </header>\n  <y-modal\n    class=\"block\"\n  >\n    <header>\n      <h2 class=\"heading\">Основная информация</h2>\n    </header>\n    <y-input placeholder=\"Название\" v-model.trim=\"group.name\" />\n  </y-modal>\n  <y-modal\n    class=\"block\"\n  >\n    <header>\n      <h2 class=\"heading\">Добавление пользователей в группу</h2>\n    </header>\n    <y-list\n        :items=\"users\"\n        key-of-name=\"login\"\n        show-id=\"jetBotId\"\n        :selectable=\"true\"\n        @select=\"selectUser\"\n    />\n  </y-modal>\n  <y-cool-button @click=\"create\">Сохранить</y-cool-button>\n</template>\n\n<script>\nimport User from \"@/api/admin/User\";\nimport Group from \"@/api/admin/Group\";\nimport mainConf, {ProjectState} from \"../../../../main.conf\";\n\nexport default {\n  name: \"CreateGroup\",\n  data() {\n    return {\n      company: {},\n      group: {\n        name: \"\",\n        users: []\n      },\n      users: []\n    }\n  },\n  async created() {\n    if (mainConf.projectState === ProjectState.dev)\n      console.log(this.$store.state.company.name);\n    this.company = this.$store.state.company;\n\n    const user = new User();\n    this.users = (await user.getAll({\n      except_company_id: this.company.id\n    })).map(el => {\n      el.active = false;\n      return el;\n    });\n    // console.log(this.users[0]);\n  },\n  methods: {\n    selectUser(n) {\n      n.active = !n.active;\n    },\n    create() {\n      const group = new Group();\n      this.group.users = this.users.filter(el => el.active).map(el => parseInt(el.id));\n      group.create(this.company.id, this.group).then(res => {\n        this.$emit('close');\n      });\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .header {\n    display: grid;\n    grid-template-columns: auto max-content;\n    justify-content: left;\n    grid-gap: 1rem;\n  }\n  .block {\n    display: grid;\n    grid-gap: .5rem;\n  }\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
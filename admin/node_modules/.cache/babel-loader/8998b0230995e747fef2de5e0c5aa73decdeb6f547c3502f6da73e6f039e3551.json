{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-944ddc3e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"header\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"heading\"\n}, \"Редактирование основной информации\")], -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"heading\"\n}, \"Блоки в компании\")], -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"heading\"\n}, \"Блоки, которые можно добавить\")], -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"heading\"\n}, \"Управление группами компании\")], -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", {\n  class: \"header\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"heading\"\n}, \"Опасная зона\")], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_y_left_arrow_button = _resolveComponent(\"y-left-arrow-button\");\n  const _component_y_input = _resolveComponent(\"y-input\");\n  const _component_y_cool_button = _resolveComponent(\"y-cool-button\");\n  const _component_y_modal = _resolveComponent(\"y-modal\");\n  const _component_y_list = _resolveComponent(\"y-list\");\n  const _component_create_group = _resolveComponent(\"create-group\");\n  const _component_edit_group = _resolveComponent(\"edit-group\");\n  return _openBlock(), _createBlock(_component_y_modal, {\n    class: \"main\"\n  }, {\n    default: _withCtx(() => [$data.window === 'main' ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createElementVNode(\"header\", _hoisted_1, [_createVNode(_component_y_left_arrow_button, {\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('close'))\n    }), _createElementVNode(\"h1\", null, \"Редактирование: \" + _toDisplayString($data.company.name), 1 /* TEXT */)]), _createVNode(_component_y_modal, {\n      class: \"block\"\n    }, {\n      default: _withCtx(() => [_hoisted_2, _createVNode(_component_y_input, {\n        modelValue: $data.company.name,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.company.name = $event),\n        modelModifiers: {\n          trim: true\n        }\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_y_cool_button, {\n        onClick: $options.edit\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Сохранить\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    }), $data.company.blocks.length > 0 ? (_openBlock(), _createBlock(_component_y_modal, {\n      key: 0,\n      class: \"block\"\n    }, {\n      default: _withCtx(() => [_hoisted_3, _createVNode(_component_y_list, {\n        \"key-of-name\": \"name\",\n        selectable: true,\n        items: $data.company.blocks,\n        onSelect: $options.selectRemoveBlock\n      }, null, 8 /* PROPS */, [\"items\", \"onSelect\"]), _createVNode(_component_y_cool_button, {\n        onClick: $options.removeBlock\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Удалить блок из \" + _toDisplayString($data.company.name), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_y_modal, {\n      class: \"block\"\n    }, {\n      default: _withCtx(() => [_hoisted_4, $data.blocks.length > 0 ? (_openBlock(), _createBlock(_component_y_list, {\n        key: 0,\n        \"key-of-name\": \"name\",\n        items: $data.blocks,\n        selectable: true,\n        onSelect: $options.selectAddBlock\n      }, null, 8 /* PROPS */, [\"items\", \"onSelect\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_y_cool_button, {\n        onClick: $options.addBlocks\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Добавить блок в \" + _toDisplayString($data.company.name), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_y_modal, {\n      class: \"block\"\n    }, {\n      default: _withCtx(() => [_hoisted_5, _createVNode(_component_y_list, {\n        \"key-of-name\": \"name\",\n        selectable: true,\n        items: $data.company.groups,\n        onSelect: $options.selectGroup\n      }, null, 8 /* PROPS */, [\"items\", \"onSelect\"]), _createVNode(_component_y_cool_button, {\n        onClick: $options.addGroup\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Добавить группу\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), $data.window === 'createGroup' ? (_openBlock(), _createBlock(_component_create_group, {\n      key: 1,\n      onClose: $options.update\n    }, null, 8 /* PROPS */, [\"onClose\"])) : _createCommentVNode(\"v-if\", true), $data.window === 'editGroup' ? (_openBlock(), _createBlock(_component_edit_group, {\n      key: 2,\n      onClose: $options.update\n    }, null, 8 /* PROPS */, [\"onClose\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_y_modal, null, {\n      default: _withCtx(() => [_hoisted_6, _createVNode(_component_y_cool_button, {\n        onClick: $options.remove\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Удалить компанию\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;;EAKcA,KAAK,EAAC;AAAQ;gEAKpBC,oBAES,8BADPA,oBAA2D;EAAvDD,KAAK,EAAC;AAAS,GAAC,oCAAkC;gEAMxDC,oBAES,8BADPA,oBAAyC;EAArCD,KAAK,EAAC;AAAS,GAAC,kBAAgB;gEAWtCC,oBAES,8BADPA,oBAAsD;EAAlDD,KAAK,EAAC;AAAS,GAAC,+BAA6B;gEAYnDC,oBAES,8BADPA,oBAAqD;EAAjDD,KAAK,EAAC;AAAS,GAAC,8BAA4B;gEAwBpDC,oBAES;EAFDD,KAAK,EAAC;AAAQ,iBACpBC,oBAAqC;EAAjCD,KAAK,EAAC;AAAS,GAAC,cAAY;;;;;;;;;;uBAnEtCE,aAwEUC;IAxEDH,KAAK,EAAC;EAAM;sBACnB,MAmDW,CAlDDI,YAAM,6BADhBC,oBAmDWC;MAAAC;IAAA,IAhDTN,oBAGS,UAHTO,UAGS,GAFPC,aAA+CC;MAAzBC,OAAK,sCAAEC,UAAK;QAClCX,oBAAyC,YAArC,kBAAgB,oBAAEG,aAAO,CAACS,IAAI,oBAEpCJ,aAMUN;MANDH,KAAK,EAAC;IAAO;wBACpB,MAES,CAFTc,UAES,EACTL,aAAuCM;oBAAhBX,aAAO,CAACS,IAAI;mEAAZT,aAAO,CAACS,IAAI;wBAA1B;UAAAG;QAAA;+CACTP,aAAsDQ;QAAtCN,OAAK,EAAEO;MAAI;0BAAE,MAAS,kBAAT,WAAS;;;;QAEXd,aAAO,CAACe,MAAM,CAACC,MAAM,sBAAlDlB,aAWUC;;MAXDH,KAAK,EAAC;;wBACb,MAES,CAFTqB,UAES,EACTZ,aAKEa;QAJE,aAAW,EAAC,MAAM;QACjBC,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAEpB,aAAO,CAACe,MAAM;QACrBM,QAAM,EAAEP;sDAEbT,aAAsFQ;QAAtEN,OAAK,EAAEO;MAAW;0BAAE,MAAgB,kBAAhB,kBAAgB,oBAAGd,aAAO,CAACS,IAAI;;;;;6CAErEJ,aAYUN;MAZDH,KAAK,EAAC;IAAO;wBACpB,MAES,CAFT0B,UAES,EAECtB,YAAM,CAACgB,MAAM,sBADvBlB,aAMEoB;;QAJE,aAAW,EAAC,MAAM;QACjBE,KAAK,EAAEpB,YAAM;QACbmB,UAAU,EAAE,IAAI;QAChBE,QAAM,EAAEP;2FAEbT,aAAoFQ;QAApEN,OAAK,EAAEO;MAAS;0BAAE,MAAgB,kBAAhB,kBAAgB,oBAAGd,aAAO,CAACS,IAAI;;;;;QAEnEJ,aAWUN;MAXDH,KAAK,EAAC;IAAO;wBACpB,MAES,CAFT2B,UAES,EACTlB,aAKEa;QAJE,aAAW,EAAC,MAAM;QACjBC,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAEpB,aAAO,CAACwB,MAAM;QACrBH,QAAM,EAAEP;sDAEbT,aAAgEQ;QAAhDN,OAAK,EAAEO;MAAQ;0BAAE,MAAe,kBAAf,iBAAe;;;;yEAI1Cd,YAAM,oCADhBF,aAIe2B;;MAFVC,OAAK,EAAEZ;+EAKFd,YAAM,kCADhBF,aAIa6B;;MAFRD,OAAK,EAAEZ;+EAIZT,aAKUN;wBAJR,MAES,CAFT6B,UAES,EACTvB,aAA+DQ;QAA/CN,OAAK,EAAEO;MAAM;0BAAE,MAAgB,kBAAhB,kBAAgB","names":["class","_createElementVNode","_createBlock","_component_y_modal","$data","_createElementBlock","_Fragment","key","_hoisted_1","_createVNode","_component_y_left_arrow_button","onClick","_ctx","name","_hoisted_2","_component_y_input","trim","_component_y_cool_button","$options","blocks","length","_hoisted_3","_component_y_list","selectable","items","onSelect","_hoisted_4","_hoisted_5","groups","_component_create_group","onClose","_component_edit_group","_hoisted_6"],"sourceRoot":"","sources":["/home/yan/Документы/psyreply2.0_front/admin/src/components/Company/EditCompany.vue"],"sourcesContent":["<template>\n  <y-modal class=\"main\">\n    <template\n        v-if=\"window === 'main'\"\n    >\n      <header class=\"header\">\n        <y-left-arrow-button @click=\"$emit('close')\" />\n        <h1>Редактирование: {{company.name}}</h1>\n      </header>\n      <y-modal class=\"block\">\n        <header>\n          <h2 class=\"heading\">Редактирование основной информации</h2>\n        </header>\n        <y-input v-model.trim=\"company.name\" />\n        <y-cool-button @click=\"edit\">Сохранить</y-cool-button>\n      </y-modal>\n      <y-modal class=\"block\" v-if=\"company.blocks.length > 0\">\n        <header>\n          <h2 class=\"heading\">Блоки в компании</h2>\n        </header>\n        <y-list\n            key-of-name=\"name\"\n            :selectable=\"true\"\n            :items=\"company.blocks\"\n            @select=\"selectRemoveBlock\"\n        />\n        <y-cool-button @click=\"removeBlock\">Удалить блок из {{ company.name }}</y-cool-button>\n      </y-modal>\n      <y-modal class=\"block\">\n        <header>\n          <h2 class=\"heading\">Блоки, которые можно добавить</h2>\n        </header>\n        <y-list\n            v-if=\"blocks.length > 0\"\n            key-of-name=\"name\"\n            :items=\"blocks\"\n            :selectable=\"true\"\n            @select=\"selectAddBlock\"\n        />\n        <y-cool-button @click=\"addBlocks\">Добавить блок в {{ company.name }}</y-cool-button>\n      </y-modal>\n      <y-modal class=\"block\">\n        <header>\n          <h2 class=\"heading\">Управление группами компании</h2>\n        </header>\n        <y-list\n            key-of-name=\"name\"\n            :selectable=\"true\"\n            :items=\"company.groups\"\n            @select=\"selectGroup\"\n        />\n        <y-cool-button @click=\"addGroup\">Добавить группу</y-cool-button>\n      </y-modal>\n    </template>\n    <create-group\n        v-if=\"window === 'createGroup'\"\n        @close=\"update\"\n    >\n    </create-group>\n\n    <edit-group\n        v-if=\"window === 'editGroup'\"\n        @close=\"update\"\n    >\n    </edit-group>\n\n    <y-modal>\n      <header class=\"header\">\n        <h2 class=\"heading\">Опасная зона</h2>\n      </header>\n      <y-cool-button @click=\"remove\">Удалить компанию</y-cool-button>\n    </y-modal>\n\n  </y-modal>\n\n</template>\n\n<script>\nimport Company from '@/api/admin/Company';\nimport Block from '@/api/admin/Block';\nimport YCoolButton from '@/components/UI/YCoolButton';\nimport CreateGroup from \"@/components/Group/CreateGroup\";\nimport EditGroup from \"@/components/Group/EditGroup\";\nimport mainConf, {ProjectState} from \"../../../../main.conf\";\nimport YPopupWarn from \"@/components/UI/YPopupWarn.vue\";\n\nfunction update(data) {\n  data.window = 'main'\n  const company = new Company()\n  company.get(data.companyId)\n    .then(res => {\n      if (res.ok) {\n        res.json().then(r => {\n          for (let key in r.body) data.company[key] = r.body[key]\n        })\n      }\n    })\n\n  const block = new Block()\n  block.getAll({ filters: { \"company_id\": null }})\n    .then(res => {\n      if (res.ok) {\n        res.json().then(r => data.blocks = r.body)\n      }\n    })\n  block.getAll({ filters: { \"company_id\": data.companyId }})\n    .then(res => {\n      if (res.ok) {\n        res.json().then(r => data.company.blocks = r.body)\n      }\n    })\n}\n\nexport default {\n  name: \"EditCompany\",\n  components: {CreateGroup, EditGroup, YCoolButton, YPopupWarn},\n  props: {\n    companyId: Number\n  },\n  data() {\n    return {\n      window: 'main',\n      blocks: [],\n      company: {\n        id: null,\n        name: null,\n        createdAt: null,\n        updatedAt: null,\n        blocks: []\n      }\n    }\n  },\n  created() {\n    update(this)\n  },\n  methods: {\n    addGroup() {\n      this.$store.commit('setEditCompany', this.company);\n      this.window = 'createGroup';\n    },\n    selectGroup(n) {\n      this.$store.commit('setEditCompany', this.company);\n      this.$store.commit('setEditGroup', n);\n      this.window = 'editGroup';\n    },\n    selectAddBlock(n) {\n      let block = this.blocks.filter(el => el.id === n.id)\n      block = block[0]\n      if ('active' in block) {\n        block.active = !block.active\n      } else {\n        block['active'] = true\n      }\n    },\n    selectRemoveBlock(n) {\n      let block = this.company.blocks.filter(el => el.id === n.id)\n      block = block[0]\n      if ('active' in block) {\n        block.active = !block.active\n      } else {\n        block['active'] = true\n      }\n    },\n    addBlocks() {\n      const blockRemove = this.blocks.filter(el => el.active)\n\n      if (blockRemove.length === 0) {\n        return this.$store.commit('openErrorPopup', 'Выберите блок для добавления')\n      }\n\n      const body = {\n        blocks: []\n      }\n\n      blockRemove.forEach(el => body.blocks.push(el.id))\n\n      const block = new Block()\n      block.create(`copy/${this.companyId}`, body)\n        .then(res => {\n          if (res.ok) {\n            if (mainConf.projectState === ProjectState.dev)\n              console.log(res)\n            this.$store.commit('openPopup', 'Блоки добавлены')\n            this.update()\n          } else {\n            this.$store.commit('openErrorPopup', res.msg())\n          }\n        })\n    },\n    removeBlock() {\n      const blockRemove = this.company.blocks.filter(el => el.active)\n      if (blockRemove.length === 0) {\n        this.$store.commit('openErrorPopup', \"Для удаления вы должны выбрать хотя бы 1 блок!\")\n      }\n\n      const body = {\n        blocks: []\n      }\n\n      blockRemove.forEach(el => body.blocks.push(el.id))\n\n      const block = new Block()\n      block.remove(body)\n        .then(res => {\n          if (res.ok) {\n            if (mainConf.projectState === ProjectState.dev)\n              console.log(res)\n            this.$store.commit('openPopup', 'Блоки удалены')\n            this.update()\n          } else {\n            this.$store.commit('openErrorPopup', res.msg())\n          }\n        })\n    },\n    edit() {\n      const company = new Company();\n      company.update(this.company.id, {\n        company: {\n          name: this.company.name\n        }\n      }, res => {\n        this.update()\n      }, err => err)\n\n    },\n    remove() {\n      this.$store.commit('openWarnPopup', { message: \"Вы уверены, что хотите удалить компанию?\", acceptCallback: () => {\n          const company = new Company()\n\n          company.remove(this.companyId)\n              .then(res => {\n                if (res.ok) {\n                  this.$store.commit('openPopup', \"Компания успешно удалена!\")\n                  this.$emit('close')\n                } else {\n                  this.$store.commit('openErrorPopup', res.msg)\n                }\n              })\n        }})\n    },\n    update() { update(this) }\n  }\n}\n</script>\n\n<style scoped>\n.main {\n  display: grid;\n  grid-gap: 1rem;\n}\n.modal {\n  display: grid;\n  grid-gap: 1rem;\n}\n.header {\n  display: grid;\n  grid-template-columns: auto max-content;\n  justify-content: left;\n  grid-gap: 1rem;\n}\n.block {\n  display: grid;\n  grid-gap: .5rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
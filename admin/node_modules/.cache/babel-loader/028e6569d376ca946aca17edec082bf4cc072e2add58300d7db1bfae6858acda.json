{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport mainConf, { ProjectState } from \"../../../main.conf\";\nexport default createStore({\n  state: {\n    app: {\n      popupError: {\n        show: false,\n        message: null\n      },\n      popupWarn: {\n        show: false,\n        message: null,\n        acceptCallback: null\n      },\n      popup: {\n        show: false,\n        message: null\n      }\n    },\n    newTest: {\n      questionsCount: 0,\n      questions: []\n    },\n    results: {\n      editBlock: null\n    },\n    company: {},\n    group: {}\n  },\n  getters: {\n    editBlock(state) {\n      return state.results.editBlock;\n    },\n    questions(state) {\n      return state.newTest.questions;\n    },\n    question: state => id => {\n      return state.newTest.questions[id];\n    },\n    test: state => {\n      return state.newTest;\n    },\n    popupError(state) {\n      return state.app.popupError;\n    },\n    popupWarn(state) {\n      return state.app.popupWarn;\n    },\n    popup(state) {\n      return state.app.popup;\n    }\n  },\n  mutations: {\n    setEditBlock(state, block) {\n      state.results.editBlock = block;\n    },\n    removeEditBlock(state) {\n      state.results.editBlock = null;\n    },\n    addQuestion(state, {\n      question,\n      needCopy\n    }) {\n      question.id = state.newTest.questionsCount;\n      state.newTest.questions.push(question);\n      state.newTest.questionsCount++;\n      if (state.newTest.questions.length > 1 && needCopy) {\n        let i = 1;\n        state.newTest.questions[0].answers.map(el => {\n          let answer = el;\n          answer.id = i;\n          this.commit(\"addAnswer\", {\n            answer,\n            questionId: question.id\n          });\n          i++;\n        });\n      }\n    },\n    editQuestion(state, question) {\n      state.newTest.questions.map((el, index) => {\n        if (el.id === question.id) {\n          state.newTest.questions[index] = question;\n        }\n      });\n    },\n    removeQuestion(state, question) {\n      state.newTest.questions.splice(question, 1);\n      state.newTest.questionsCount--;\n    },\n    fillQuestions(state, questions) {\n      state.newTest.questions = questions;\n      state.newTest.questionsCount = questions.length;\n    },\n    addAnswer(state, data) {\n      if (mainConf.projectState === ProjectState.dev) console.log(data);\n      state.newTest.questions[data.questionId].answers.push(data.answer);\n    },\n    editAnswer(state, data) {\n      state.newTest.questions[data.questionId].answers[data.id] = data.answer;\n    },\n    removeAnswer(state, data) {\n      state.newTest.questions[data.questionId].answers.splice(data.id, 1);\n    },\n    clearNewTest(state) {\n      state.newTest = {\n        questionsCount: 0,\n        questions: []\n      };\n    },\n    fillTest(state, test) {\n      state.newTest = test;\n    },\n    openErrorPopup(state, message) {\n      state.app.popupError.show = true;\n      state.app.popupError.message = message;\n    },\n    closeErrorPopup(state) {\n      state.app.popupError.show = false;\n      state.app.popupError.message = '';\n    },\n    openWarnPopup(state, {\n      message,\n      acceptCallback\n    }) {\n      state.app.popupWarn.show = true;\n      state.app.popupWarn.message = message;\n      state.app.popupWarn.acceptCallback = acceptCallback;\n    },\n    acceptWarnPopup(state) {\n      state.app.popupWarn.acceptCallback();\n    },\n    closeWarnPopup(state) {\n      state.app.popupWarn.show = false;\n      state.app.popupWarn.message = \"\";\n    },\n    openPopup(state, message) {\n      state.app.popup.show = true;\n      state.app.popup.message = message;\n      setTimeout(() => {\n        state.app.popup.show = false;\n        state.app.popup.message = '';\n      }, 3000);\n    },\n    setEditCompany(state, company) {\n      state.company = company;\n    },\n    setEditGroup(state, group) {\n      state.group = group;\n    }\n  },\n  actions: {\n    createGroup() {}\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","mainConf","ProjectState","state","app","popupError","show","message","popupWarn","acceptCallback","popup","newTest","questionsCount","questions","results","editBlock","company","group","getters","question","id","test","mutations","setEditBlock","block","removeEditBlock","addQuestion","needCopy","push","length","i","answers","map","el","answer","commit","questionId","editQuestion","index","removeQuestion","splice","fillQuestions","addAnswer","data","projectState","dev","console","log","editAnswer","removeAnswer","clearNewTest","fillTest","openErrorPopup","closeErrorPopup","openWarnPopup","acceptWarnPopup","closeWarnPopup","openPopup","setTimeout","setEditCompany","setEditGroup","actions","createGroup","modules"],"sources":["/home/yan/Документы/psyreply2.0_front/admin/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport mainConf, {ProjectState} from \"../../../main.conf\";\n\nexport default createStore({\n  state: {\n    app: {\n      popupError: {\n        show: false,\n        message: null\n      },\n      popupWarn: {\n        show: false,\n        message: null,\n        acceptCallback: null,\n      },\n      popup: {\n        show: false,\n        message: null\n      },\n    },\n    newTest: {\n      questionsCount: 0,\n      questions: []\n    },\n    results: {\n      editBlock: null\n    },\n    company: {\n\n    },\n    group: {\n\n    }\n  },\n  getters: {\n    editBlock(state) {\n      return state.results.editBlock\n    },\n    questions(state) {\n      return state.newTest.questions\n    },\n    question: (state) => (id) => {\n      return state.newTest.questions[id]\n    },\n    test: (state) => {\n      return state.newTest\n    },\n    popupError(state) {\n      return state.app.popupError\n    },\n    popupWarn(state) {\n      return state.app.popupWarn\n    },\n    popup(state) {\n      return state.app.popup\n    }\n  },\n  mutations: {\n    setEditBlock(state, block) {\n      state.results.editBlock = block\n    },\n    removeEditBlock(state) {\n      state.results.editBlock = null\n    },\n    addQuestion(state, { question, needCopy }) {\n      question.id = state.newTest.questionsCount\n      state.newTest.questions.push(question)\n      state.newTest.questionsCount++\n\n      if (state.newTest.questions.length > 1 && needCopy) {\n        let i = 1;\n        state.newTest.questions[0].answers.map(el => {\n          let answer = el;\n          answer.id = i;\n          this.commit(\"addAnswer\", {\n            answer,\n            questionId: question.id\n          });\n          i++\n        })\n      }\n    },\n    editQuestion(state, question) {\n      state.newTest.questions.map((el, index) => {\n        if (el.id === question.id) {\n          state.newTest.questions[index] = question\n        }\n      })\n    },\n    removeQuestion(state, question) {\n      state.newTest.questions.splice(question, 1)\n      state.newTest.questionsCount--;\n    },\n    fillQuestions(state, questions) {\n      state.newTest.questions = questions\n      state.newTest.questionsCount = questions.length;\n    },\n    addAnswer(state, data) {\n      if (mainConf.projectState === ProjectState.dev)\n        console.log(data)\n      state.newTest.questions[data.questionId].answers.push(data.answer)\n    },\n    editAnswer(state, data) {\n      state.newTest.questions[data.questionId].answers[data.id] = data.answer\n    },\n    removeAnswer(state, data) {\n      state.newTest.questions[data.questionId].answers.splice(data.id, 1)\n    },\n    clearNewTest(state) {\n      state.newTest = {\n        questionsCount: 0,\n        questions: []\n      }\n    },\n    fillTest(state, test) {\n      state.newTest = test\n    },\n    openErrorPopup(state, message) {\n      state.app.popupError.show = true\n      state.app.popupError.message = message\n    },\n    closeErrorPopup(state) {\n      state.app.popupError.show = false\n      state.app.popupError.message = ''\n    },\n    openWarnPopup(state, { message, acceptCallback }) {\n      state.app.popupWarn.show = true;\n      state.app.popupWarn.message = message;\n      state.app.popupWarn.acceptCallback = acceptCallback;\n    },\n    acceptWarnPopup(state) {\n      state.app.popupWarn.acceptCallback();\n    },\n    closeWarnPopup(state) {\n      state.app.popupWarn.show = false;\n      state.app.popupWarn.message = \"\";\n    },\n    openPopup(state, message) {\n      state.app.popup.show = true\n      state.app.popup.message = message\n      setTimeout(() => {\n        state.app.popup.show = false\n        state.app.popup.message = ''\n      }, 3000)\n    },\n    setEditCompany(state, company) {\n      state.company = company;\n    },\n    setEditGroup(state, group) {\n      state.group = group;\n    }\n  },\n  actions: {\n    createGroup() {\n\n    }\n  },\n  modules: {\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
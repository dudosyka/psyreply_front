{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport CreateBlock from '@/components/Block/CreateBlock';\nimport Block from '@/api/admin/Block';\nimport Company from '@/api/admin/Company';\nexport default {\n  name: \"CreateCompany\",\n  components: {\n    CreateBlock\n  },\n  emits: ['close'],\n  data() {\n    return {\n      window: 'main',\n      company: {\n        name: ''\n      },\n      blocks: []\n    };\n  },\n  created() {\n    const block = new Block();\n    block.getAll({\n      filters: {\n        \"company_id\": null\n      }\n    }).then(res => {\n      if (res.ok) {\n        res.json().then(r => this.blocks = r.body);\n      }\n    });\n  },\n  methods: {\n    update() {\n      const block = new Block();\n      block.getAll({\n        filters: {\n          \"company_id\": null\n        }\n      }).then(res => {\n        if (res.ok) {\n          res.json().then(r => this.blocks = r.body);\n        }\n      });\n    },\n    close() {\n      this.window = 'main';\n      this.$router.push('/company');\n      this.update();\n    },\n    selectBlock(n) {\n      let block = this.blocks.filter(el => el.id === n.id);\n      block = block[0];\n      if ('active' in block) {\n        block.active = !block.active;\n      } else {\n        block['active'] = true;\n      }\n    },\n    createCompany() {\n      const company = new Company();\n      const blocks = [];\n      this.blocks.map(el => {\n        if (el.active) blocks.push(el.id);\n      });\n      const body = {};\n      if (this.company.name.length > 3) {\n        body.company = this.company;\n      } else {\n        this.$store.commit('openErrorPopup', \"Слишком короткое название!\");\n      }\n      if (blocks.length > 0) body.company.inputBlocks = blocks;\n      company.create('', body).then(res => {\n        if (res.ok) {\n          this.$store.commit('openPopup', \"Компания успешно создана!\");\n          this.$emit('close');\n        } else {\n          this.$store.commit('openErrorPopup', res.msg());\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["CreateBlock","Block","Company","name","components","emits","data","window","company","blocks","created","block","getAll","filters","then","res","ok","json","r","body","methods","update","close","$router","push","selectBlock","n","filter","el","id","active","createCompany","map","length","$store","commit","inputBlocks","create","$emit","msg"],"sourceRoot":"","sources":["/home/yan/Документы/psyreply2.0_front/admin/src/components/Company/CreateCompany.vue"],"sourcesContent":["<template>\n  <y-modal v-if=\"window === 'main'\" class=\"modal\">\n    <header class=\"header\">\n      <y-left-arrow-button @click=\"$emit('close')\" />\n      <h1 class=\"heading\">Новая компания</h1>\n      <y-button @click=\"this.window = 'addBlock'\" :plus=\"true\">Добавить блок</y-button>\n    </header>\n    <y-input\n        v-model=\"company.name\"\n        placeholder=\"Название компании\"\n    />\n    <y-list\n      @select=\"selectBlock\"\n      v-if=\"blocks.length > 0\"\n      key-of-name=\"name\"\n      :items=\"blocks\"\n      :selectable=\"true\"\n    />\n    <y-cool-button @click=\"createCompany\">Создать компанию</y-cool-button>\n  </y-modal>\n\n  <create-block\n    v-if=\"window === 'addBlock'\"\n    @close=\"close\"\n  />\n</template>\n\n<script>\nimport CreateBlock from '@/components/Block/CreateBlock';\nimport Block from '@/api/admin/Block';\nimport Company from '@/api/admin/Company';\n\nexport default {\n  name: \"CreateCompany\",\n  components: {\n    CreateBlock\n  },\n  emits: ['close'],\n  data() {\n    return {\n      window: 'main',\n      company: {\n        name: '',\n      },\n      blocks: []\n    }\n  },\n  created() {\n    const block = new Block()\n    block.getAll({ filters: { \"company_id\": null }})\n      .then(res => {\n        if (res.ok) {\n          res.json().then(r => this.blocks = r.body)\n        }\n      })\n  },\n  methods: {\n    update() {\n      const block = new Block()\n      block.getAll({ filters: { \"company_id\": null }})\n        .then(res => {\n          if (res.ok) {\n            res.json().then(r => this.blocks = r.body)\n          }\n        })\n    },\n    close() {\n      this.window = 'main'\n      this.$router.push('/company')\n      this.update()\n    },\n    selectBlock(n) {\n      let block = this.blocks.filter(el => el.id === n.id)\n      block = block[0]\n      if ('active' in block) {\n        block.active = !block.active\n      } else {\n        block['active'] = true\n      }\n    },\n    createCompany() {\n      const company = new Company()\n      const blocks = []\n      this.blocks.map(el => {if (el.active) blocks.push(el.id)})\n      const body = {}\n      if (this.company.name.length > 3) {\n        body.company = this.company\n      } else {\n        this.$store.commit('openErrorPopup', \"Слишком короткое название!\")\n      }\n      if (blocks.length > 0) body.company.inputBlocks = blocks\n      company.create('', body)\n        .then(res => {\n          if (res.ok) {\n            this.$store.commit('openPopup', \"Компания успешно создана!\")\n            this.$emit('close')\n          } else {\n            this.$store.commit('openErrorPopup', res.msg())\n          }\n        })\n    },\n  }\n}\n</script>\n\n<style scoped>\n.modal {\n  display: grid;\n  grid-gap: 1rem;\n}\n.header {\n  display: grid;\n  grid-template-columns: auto 1fr min-content;\n  grid-gap: 2rem;\n  justify-content: start;\n  align-items: center;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
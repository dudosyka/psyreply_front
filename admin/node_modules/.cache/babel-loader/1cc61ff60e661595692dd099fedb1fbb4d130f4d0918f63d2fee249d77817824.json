{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-f68389f0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"question\"\n};\nconst _hoisted_2 = {\n  class: \"question__id\"\n};\nconst _hoisted_3 = {\n  class: \"question__title__add\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Ответы\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_y_input = _resolveComponent(\"y-input\");\n  const _component_y_button = _resolveComponent(\"y-button\");\n  const _component_add_answers = _resolveComponent(\"add-answers\");\n  return _openBlock(), _createElementBlock(\"article\", _hoisted_1, [_createElementVNode(\"span\", _hoisted_2, _toDisplayString($options.listId), 1 /* TEXT */), _createVNode(_component_y_input, {\n    onInput: $options.giveData,\n    modelValue: $options.question.title,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $options.question.title = $event)\n  }, null, 8 /* PROPS */, [\"onInput\", \"modelValue\"]), _createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.questionEditAnswers && $options.questionEditAnswers(...args)),\n    class: \"question__add plus\"\n  }, \"+\")]), _createVNode(_component_y_button, {\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.$emit('remove')),\n    class: \"question__del\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"X\")]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"label\", null, [_createTextVNode(\" Монеты \"), _createVNode(_component_y_input, {\n    onInput: $options.giveData,\n    modelValue: $options.question.coins,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $options.question.coins = $event)\n  }, null, 8 /* PROPS */, [\"onInput\", \"modelValue\"])]), $data.popUp.show === true ? (_openBlock(), _createBlock(_component_add_answers, {\n    key: 0,\n    questionId: $props.questionId,\n    onClose: _cache[4] || (_cache[4] = $event => $data.popUp.show = false)\n  }, null, 8 /* PROPS */, [\"questionId\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;EACWA,KAAK,EAAC;AAAU;;EACjBA,KAAK,EAAC;AAAc;;EAEtBA,KAAK,EAAC;AAAsB;gEAChCC,oBAAe,YAAX,QAAM;;;;;;uBAJZC,oBAkBU,WAlBVC,UAkBU,GAjBRF,oBAA4C,QAA5CG,UAA4C,mBAAfC,eAAM,kBACnCC,aAAsDC;IAA5CC,OAAK,EAAEH,iBAAQ;gBAAWA,iBAAQ,CAACI,KAAK;+DAAdJ,iBAAQ,CAACI,KAAK;sDACnDR,oBAGM,OAHNS,UAGM,GAFLC,UAAe,EACdV,oBAA0E;IAAjEW,OAAK,yCAAEP,qEAAmB;IAAEL,KAAK,EAAC;KAAqB,GAAC,KAElEM,aAAqEO;IAA1DD,OAAK,sCAAEE,UAAK;IAAYd,KAAK,EAAC;;sBAAgB,MAAC,kBAAD,GAAC;;MAE1DC,oBAEQ,iCAFD,UACE,gBAAsDM;IAA5CC,OAAK,EAAEH,iBAAQ;gBAAWA,iBAAQ,CAACU,KAAK;+DAAdV,iBAAQ,CAACU,KAAK;wDAKnDC,WAAK,CAACC,IAAI,2BAFlBC,aAIEC;;IAHCC,UAAU,EAAEC,iBAAU;IAEtBC,OAAK,sCAAEN,WAAK,CAACC,IAAI","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","$options","_createVNode","_component_y_input","onInput","title","_hoisted_3","_hoisted_4","onClick","_component_y_button","_ctx","coins","$data","show","_createBlock","_component_add_answers","questionId","$props","onClose"],"sourceRoot":"","sources":["/home/yan/Документы/psyreply2.0_front/admin/src/components/Test/QuestionTypes/QuestionType1.vue"],"sourcesContent":["<template>\n  <article class=\"question\">\n    <span class=\"question__id\">{{listId}}</span>\n    <y-input @input=\"giveData\" v-model=\"question.title\" />\n   <div class=\"question__title__add\">\n    <h3>Ответы</h3>\n     <button @click=\"questionEditAnswers\" class=\"question__add plus\">+</button>\n   </div>\n    <y-button @click=\"$emit('remove')\" class=\"question__del\">X</y-button>\n\n    <label>\n      Монеты <y-input @input=\"giveData\" v-model=\"question.coins\" />\n    </label>\n\n    <add-answers\n      :questionId=\"questionId\"\n      v-if=\"popUp.show === true\"\n      @close=\"popUp.show = false\"\n    />\n  </article>\n</template>\n\n<script>\nimport AddAnswers from '@/components/Test/AddAnswers';\n\nexport default {\n  name: \"QuestionType1\",\n  components: {\n    AddAnswers\n  },\n  props: [\n    'questionId'\n  ],\n  data() {\n    return {\n      popUp: {\n        show: false\n      },\n    }\n  },\n  methods: {\n    giveData() {\n      this.$store.commit('editQuestion', {\n        questionId: this.questionId,\n        question: this.question\n      })\n    },\n    questionEditAnswers() {\n    //   console.log(this.questionId);\n      this.popUp.show = true;\n    }\n  },\n  computed: {\n    listId() {\n      const listId = this.questionId + 1\n      return listId\n    },\n    question() {\n      return this.$store.getters.question(this.questionId)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.question {\n  display: grid;\n  grid-template-columns: auto auto auto min-content;\n  grid-gap: 1.3rem;\n  align-items: center;\n}\n.question__id {\n  font-size: 2rem;\n}\n\n.question__del {\n  color: red;\n  width: min-content;\n}\n.question__title__add{\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n.question__add{\n  width: min-content;\n}\n.plus{\n  margin-left:10px ;\n  background: rgba(255, 255, 255, 0.17);\n  border-radius: 7px;\n  font-family: 'Rubik';\n  font-style: normal;\n  font-weight: 500;\n  width: 32px;\n  line-height: 28px;\n  font-size: 28px;\n  height: auto;\n  align-items: center;\n  text-align: center;\n  color: #FFFFFF;\n  cursor: pointer;\n\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
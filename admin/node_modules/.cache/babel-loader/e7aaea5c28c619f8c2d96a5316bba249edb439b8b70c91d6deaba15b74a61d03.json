{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-60965e2f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"header\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"heading\"\n}, \"Новая компания\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_y_left_arrow_button = _resolveComponent(\"y-left-arrow-button\");\n  const _component_y_button = _resolveComponent(\"y-button\");\n  const _component_y_input = _resolveComponent(\"y-input\");\n  const _component_y_list = _resolveComponent(\"y-list\");\n  const _component_y_cool_button = _resolveComponent(\"y-cool-button\");\n  const _component_y_modal = _resolveComponent(\"y-modal\");\n  const _component_create_block = _resolveComponent(\"create-block\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$data.window === 'main' ? (_openBlock(), _createBlock(_component_y_modal, {\n    key: 0,\n    class: \"modal\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"header\", _hoisted_1, [_createVNode(_component_y_left_arrow_button, {\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('close'))\n    }), _hoisted_2, _createVNode(_component_y_button, {\n      onClick: _cache[1] || (_cache[1] = $event => this.window = 'addBlock'),\n      plus: true\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Добавить блок\")]),\n      _: 1 /* STABLE */\n    })]), _createVNode(_component_y_input, {\n      modelValue: $data.company.name,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.company.name = $event),\n      placeholder: \"Название компании\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), $data.blocks.length > 0 ? (_openBlock(), _createBlock(_component_y_list, {\n      key: 0,\n      onSelect: $options.selectBlock,\n      \"key-of-name\": \"name\",\n      items: $data.blocks,\n      selectable: true\n    }, null, 8 /* PROPS */, [\"onSelect\", \"items\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_y_cool_button, {\n      onClick: $options.createCompany\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Создать компанию\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), $data.window === 'addBlock' ? (_openBlock(), _createBlock(_component_create_block, {\n    key: 1,\n    onClose: $options.close\n  }, null, 8 /* PROPS */, [\"onClose\"])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EAEYA,KAAK,EAAC;AAAQ;gEAEpBC,oBAAuC;EAAnCD,KAAK,EAAC;AAAS,GAAC,gBAAc;;;;;;;;;;6DAHvBE,YAAM,6BAArBC,aAkBUC;;IAlBwBJ,KAAK,EAAC;;sBACtC,MAIS,CAJTC,oBAIS,UAJTI,UAIS,GAHPC,aAA+CC;MAAzBC,OAAK,sCAAEC,UAAK;QAClCC,UAAuC,EACvCJ,aAAiFK;MAAtEH,OAAK,2CAAOI,MAAM;MAAgBC,IAAI,EAAE;;wBAAM,MAAa,kBAAb,eAAa;;UAExEP,aAGEQ;kBAFWZ,aAAO,CAACa,IAAI;iEAAZb,aAAO,CAACa,IAAI;MACrBC,WAAW,EAAC;6CAIRd,YAAM,CAACe,MAAM,sBAFrBd,aAMEe;;MALCC,QAAM,EAAEC,oBAAW;MAEpB,aAAW,EAAC,MAAM;MACjBC,KAAK,EAAEnB,YAAM;MACboB,UAAU,EAAE;yFAEfhB,aAAsEiB;MAAtDf,OAAK,EAAEY;IAAa;wBAAE,MAAgB,kBAAhB,kBAAgB;;;;2CAIhDlB,YAAM,iCADdC,aAGEqB;;IADCC,OAAK,EAAEL","names":["class","_createElementVNode","$data","_createBlock","_component_y_modal","_hoisted_1","_createVNode","_component_y_left_arrow_button","onClick","_ctx","_hoisted_2","_component_y_button","window","plus","_component_y_input","name","placeholder","length","_component_y_list","onSelect","$options","items","selectable","_component_y_cool_button","_component_create_block","onClose"],"sourceRoot":"","sources":["/home/yan/Документы/psyreply2.0_front/admin/src/components/Company/CreateCompany.vue"],"sourcesContent":["<template>\n  <y-modal v-if=\"window === 'main'\" class=\"modal\">\n    <header class=\"header\">\n      <y-left-arrow-button @click=\"$emit('close')\" />\n      <h1 class=\"heading\">Новая компания</h1>\n      <y-button @click=\"this.window = 'addBlock'\" :plus=\"true\">Добавить блок</y-button>\n    </header>\n    <y-input\n        v-model=\"company.name\"\n        placeholder=\"Название компании\"\n    />\n    <y-list\n      @select=\"selectBlock\"\n      v-if=\"blocks.length > 0\"\n      key-of-name=\"name\"\n      :items=\"blocks\"\n      :selectable=\"true\"\n    />\n    <y-cool-button @click=\"createCompany\">Создать компанию</y-cool-button>\n  </y-modal>\n\n  <create-block\n    v-if=\"window === 'addBlock'\"\n    @close=\"close\"\n  />\n</template>\n\n<script>\nimport CreateBlock from '@/components/Block/CreateBlock';\nimport Block from '@/api/admin/Block';\nimport Company from '@/api/admin/Company';\n\nexport default {\n  name: \"CreateCompany\",\n  components: {\n    CreateBlock\n  },\n  emits: ['close'],\n  data() {\n    return {\n      window: 'main',\n      company: {\n        name: '',\n      },\n      blocks: []\n    }\n  },\n  created() {\n    const block = new Block()\n    block.getAll({ filters: { \"company_id\": null }})\n      .then(res => {\n        if (res.ok) {\n          res.json().then(r => this.blocks = r.body)\n        }\n      })\n  },\n  methods: {\n    update() {\n      const block = new Block()\n      block.getAll({ filters: { \"company_id\": null }})\n        .then(res => {\n          if (res.ok) {\n            res.json().then(r => this.blocks = r.body)\n          }\n        })\n    },\n    close() {\n      this.window = 'main'\n      this.$router.push('/company')\n      this.update()\n    },\n    selectBlock(n) {\n      let block = this.blocks.filter(el => el.id === n.id)\n      block = block[0]\n      if ('active' in block) {\n        block.active = !block.active\n      } else {\n        block['active'] = true\n      }\n    },\n    createCompany() {\n      const company = new Company()\n      const blocks = []\n      this.blocks.map(el => {if (el.active) blocks.push(el.id)})\n      const body = {}\n      if (this.company.name.length > 3) {\n        body.company = this.company\n      } else {\n        this.$store.commit('openErrorPopup', \"Слишком короткое название!\")\n      }\n      if (blocks.length > 0) body.company.inputBlocks = blocks\n      company.create('', body)\n        .then(res => {\n          if (res.ok) {\n            this.$store.commit('openPopup', \"Компания успешно создана!\")\n            this.$emit('close')\n          } else {\n            this.$store.commit('openErrorPopup', res.msg())\n          }\n        })\n    },\n  }\n}\n</script>\n\n<style scoped>\n.modal {\n  display: grid;\n  grid-gap: 1rem;\n}\n.header {\n  display: grid;\n  grid-template-columns: auto 1fr min-content;\n  grid-gap: 2rem;\n  justify-content: start;\n  align-items: center;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
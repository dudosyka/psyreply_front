{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Company from '@/api/admin/Company';\nimport Block from '@/api/admin/Block';\nimport YCoolButton from '@/components/UI/YCoolButton';\nimport CreateGroup from \"@/components/Group/CreateGroup\";\nimport EditGroup from \"@/components/Group/EditGroup\";\nimport mainConf, { ProjectState } from \"../../../../main.conf\";\nimport YPopupWarn from \"@/components/UI/YPopupWarn.vue\";\nfunction update(data) {\n  data.window = 'main';\n  const company = new Company();\n  company.get(data.companyId).then(res => {\n    if (res.ok) {\n      res.json().then(r => {\n        for (let key in r.body) data.company[key] = r.body[key];\n      });\n    }\n  });\n  const block = new Block();\n  block.getAll({\n    filters: {\n      \"company_id\": null\n    }\n  }).then(res => {\n    if (res.ok) {\n      res.json().then(r => data.blocks = r.body);\n    }\n  });\n  block.getAll({\n    filters: {\n      \"company_id\": data.companyId\n    }\n  }).then(res => {\n    if (res.ok) {\n      res.json().then(r => data.company.blocks = r.body);\n    }\n  });\n}\nexport default {\n  name: \"EditCompany\",\n  components: {\n    CreateGroup,\n    EditGroup,\n    YCoolButton,\n    YPopupWarn\n  },\n  props: {\n    companyId: Number\n  },\n  data() {\n    return {\n      window: 'main',\n      blocks: [],\n      company: {\n        id: null,\n        name: null,\n        createdAt: null,\n        updatedAt: null,\n        blocks: []\n      }\n    };\n  },\n  created() {\n    update(this);\n  },\n  methods: {\n    addGroup() {\n      this.$store.commit('setEditCompany', this.company);\n      this.window = 'createGroup';\n    },\n    selectGroup(n) {\n      this.$store.commit('setEditCompany', this.company);\n      this.$store.commit('setEditGroup', n);\n      this.window = 'editGroup';\n    },\n    selectAddBlock(n) {\n      let block = this.blocks.filter(el => el.id === n.id);\n      block = block[0];\n      if ('active' in block) {\n        block.active = !block.active;\n      } else {\n        block['active'] = true;\n      }\n    },\n    selectRemoveBlock(n) {\n      let block = this.company.blocks.filter(el => el.id === n.id);\n      block = block[0];\n      if ('active' in block) {\n        block.active = !block.active;\n      } else {\n        block['active'] = true;\n      }\n    },\n    addBlocks() {\n      const blockRemove = this.blocks.filter(el => el.active);\n      if (blockRemove.length === 0) {\n        return this.$store.commit('openErrorPopup', 'Выберите блок для добавления');\n      }\n      const body = {\n        blocks: []\n      };\n      blockRemove.forEach(el => body.blocks.push(el.id));\n      const block = new Block();\n      block.create(`copy/${this.companyId}`, body).then(res => {\n        if (res.ok) {\n          if (mainConf.projectState === ProjectState.dev) console.log(res);\n          this.$store.commit('openPopup', 'Блоки добавлены');\n          this.update();\n        } else {\n          this.$store.commit('openErrorPopup', res.msg());\n        }\n      });\n    },\n    removeBlock() {\n      const blockRemove = this.company.blocks.filter(el => el.active);\n      if (blockRemove.length === 0) {\n        this.$store.commit('openErrorPopup', \"Для удаления вы должны выбрать хотя бы 1 блок!\");\n      }\n      const body = {\n        blocks: []\n      };\n      blockRemove.forEach(el => body.blocks.push(el.id));\n      const block = new Block();\n      block.remove(body).then(res => {\n        if (res.ok) {\n          if (mainConf.projectState === ProjectState.dev) console.log(res);\n          this.$store.commit('openPopup', 'Блоки удалены');\n          this.update();\n        } else {\n          this.$store.commit('openErrorPopup', res.msg());\n        }\n      });\n    },\n    edit() {\n      const company = new Company();\n      company.update(this.company.id, {\n        company: {\n          name: this.company.name\n        }\n      }, res => {\n        this.update();\n      }, err => err);\n    },\n    remove() {\n      this.$store.commit('openWarnPopup', {\n        message: \"Вы уверены, что хотите удалить компанию?\",\n        acceptCallback: () => {\n          const company = new Company();\n          company.remove(this.companyId).then(res => {\n            if (res.ok) {\n              this.$store.commit('openPopup', \"Компания успешно удалена!\");\n              this.$emit('close');\n            } else {\n              this.$store.commit('openErrorPopup', res.msg);\n            }\n          });\n        }\n      });\n    },\n    update() {\n      update(this);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["Company","Block","YCoolButton","CreateGroup","EditGroup","mainConf","ProjectState","YPopupWarn","update","data","window","company","get","companyId","then","res","ok","json","r","key","body","block","getAll","filters","blocks","name","components","props","Number","id","createdAt","updatedAt","created","methods","addGroup","$store","commit","selectGroup","n","selectAddBlock","filter","el","active","selectRemoveBlock","addBlocks","blockRemove","length","forEach","push","create","projectState","dev","console","log","msg","removeBlock","remove","edit","err","message","acceptCallback","$emit"],"sourceRoot":"","sources":["/home/yan/Документы/psyreply2.0_front/admin/src/components/Company/EditCompany.vue"],"sourcesContent":["<template>\n  <y-modal class=\"main\">\n    <template\n        v-if=\"window === 'main'\"\n    >\n      <header class=\"header\">\n        <y-left-arrow-button @click=\"$emit('close')\" />\n        <h1>Редактирование: {{company.name}}</h1>\n      </header>\n      <y-modal class=\"block\">\n        <header>\n          <h2 class=\"heading\">Редактирование основной информации</h2>\n        </header>\n        <y-input v-model.trim=\"company.name\" />\n        <y-cool-button @click=\"edit\">Сохранить</y-cool-button>\n      </y-modal>\n      <y-modal class=\"block\" v-if=\"company.blocks.length > 0\">\n        <header>\n          <h2 class=\"heading\">Блоки в компании</h2>\n        </header>\n        <y-list\n            key-of-name=\"name\"\n            :selectable=\"true\"\n            :items=\"company.blocks\"\n            @select=\"selectRemoveBlock\"\n        />\n        <y-cool-button @click=\"removeBlock\">Удалить блок из {{ company.name }}</y-cool-button>\n      </y-modal>\n      <y-modal class=\"block\">\n        <header>\n          <h2 class=\"heading\">Блоки, которые можно добавить</h2>\n        </header>\n        <y-list\n            v-if=\"blocks.length > 0\"\n            key-of-name=\"name\"\n            :items=\"blocks\"\n            :selectable=\"true\"\n            @select=\"selectAddBlock\"\n        />\n        <y-cool-button @click=\"addBlocks\">Добавить блок в {{ company.name }}</y-cool-button>\n      </y-modal>\n      <y-modal class=\"block\">\n        <header>\n          <h2 class=\"heading\">Управление группами компании</h2>\n        </header>\n        <y-list\n            key-of-name=\"name\"\n            :selectable=\"true\"\n            :items=\"company.groups\"\n            @select=\"selectGroup\"\n        />\n        <y-cool-button @click=\"addGroup\">Добавить группу</y-cool-button>\n      </y-modal>\n    </template>\n    <create-group\n        v-if=\"window === 'createGroup'\"\n        @close=\"update\"\n    >\n    </create-group>\n\n    <edit-group\n        v-if=\"window === 'editGroup'\"\n        @close=\"update\"\n    >\n    </edit-group>\n\n    <y-modal>\n      <header class=\"header\">\n        <h2 class=\"heading\">Опасная зона</h2>\n      </header>\n      <y-cool-button @click=\"remove\">Удалить компанию</y-cool-button>\n    </y-modal>\n\n  </y-modal>\n\n</template>\n\n<script>\nimport Company from '@/api/admin/Company';\nimport Block from '@/api/admin/Block';\nimport YCoolButton from '@/components/UI/YCoolButton';\nimport CreateGroup from \"@/components/Group/CreateGroup\";\nimport EditGroup from \"@/components/Group/EditGroup\";\nimport mainConf, {ProjectState} from \"../../../../main.conf\";\nimport YPopupWarn from \"@/components/UI/YPopupWarn.vue\";\n\nfunction update(data) {\n  data.window = 'main'\n  const company = new Company()\n  company.get(data.companyId)\n    .then(res => {\n      if (res.ok) {\n        res.json().then(r => {\n          for (let key in r.body) data.company[key] = r.body[key]\n        })\n      }\n    })\n\n  const block = new Block()\n  block.getAll({ filters: { \"company_id\": null }})\n    .then(res => {\n      if (res.ok) {\n        res.json().then(r => data.blocks = r.body)\n      }\n    })\n  block.getAll({ filters: { \"company_id\": data.companyId }})\n    .then(res => {\n      if (res.ok) {\n        res.json().then(r => data.company.blocks = r.body)\n      }\n    })\n}\n\nexport default {\n  name: \"EditCompany\",\n  components: {CreateGroup, EditGroup, YCoolButton, YPopupWarn},\n  props: {\n    companyId: Number\n  },\n  data() {\n    return {\n      window: 'main',\n      blocks: [],\n      company: {\n        id: null,\n        name: null,\n        createdAt: null,\n        updatedAt: null,\n        blocks: []\n      }\n    }\n  },\n  created() {\n    update(this)\n  },\n  methods: {\n    addGroup() {\n      this.$store.commit('setEditCompany', this.company);\n      this.window = 'createGroup';\n    },\n    selectGroup(n) {\n      this.$store.commit('setEditCompany', this.company);\n      this.$store.commit('setEditGroup', n);\n      this.window = 'editGroup';\n    },\n    selectAddBlock(n) {\n      let block = this.blocks.filter(el => el.id === n.id)\n      block = block[0]\n      if ('active' in block) {\n        block.active = !block.active\n      } else {\n        block['active'] = true\n      }\n    },\n    selectRemoveBlock(n) {\n      let block = this.company.blocks.filter(el => el.id === n.id)\n      block = block[0]\n      if ('active' in block) {\n        block.active = !block.active\n      } else {\n        block['active'] = true\n      }\n    },\n    addBlocks() {\n      const blockRemove = this.blocks.filter(el => el.active)\n\n      if (blockRemove.length === 0) {\n        return this.$store.commit('openErrorPopup', 'Выберите блок для добавления')\n      }\n\n      const body = {\n        blocks: []\n      }\n\n      blockRemove.forEach(el => body.blocks.push(el.id))\n\n      const block = new Block()\n      block.create(`copy/${this.companyId}`, body)\n        .then(res => {\n          if (res.ok) {\n            if (mainConf.projectState === ProjectState.dev)\n              console.log(res)\n            this.$store.commit('openPopup', 'Блоки добавлены')\n            this.update()\n          } else {\n            this.$store.commit('openErrorPopup', res.msg())\n          }\n        })\n    },\n    removeBlock() {\n      const blockRemove = this.company.blocks.filter(el => el.active)\n      if (blockRemove.length === 0) {\n        this.$store.commit('openErrorPopup', \"Для удаления вы должны выбрать хотя бы 1 блок!\")\n      }\n\n      const body = {\n        blocks: []\n      }\n\n      blockRemove.forEach(el => body.blocks.push(el.id))\n\n      const block = new Block()\n      block.remove(body)\n        .then(res => {\n          if (res.ok) {\n            if (mainConf.projectState === ProjectState.dev)\n              console.log(res)\n            this.$store.commit('openPopup', 'Блоки удалены')\n            this.update()\n          } else {\n            this.$store.commit('openErrorPopup', res.msg())\n          }\n        })\n    },\n    edit() {\n      const company = new Company();\n      company.update(this.company.id, {\n        company: {\n          name: this.company.name\n        }\n      }, res => {\n        this.update()\n      }, err => err)\n\n    },\n    remove() {\n      this.$store.commit('openWarnPopup', { message: \"Вы уверены, что хотите удалить компанию?\", acceptCallback: () => {\n          const company = new Company()\n\n          company.remove(this.companyId)\n              .then(res => {\n                if (res.ok) {\n                  this.$store.commit('openPopup', \"Компания успешно удалена!\")\n                  this.$emit('close')\n                } else {\n                  this.$store.commit('openErrorPopup', res.msg)\n                }\n              })\n        }})\n    },\n    update() { update(this) }\n  }\n}\n</script>\n\n<style scoped>\n.main {\n  display: grid;\n  grid-gap: 1rem;\n}\n.modal {\n  display: grid;\n  grid-gap: 1rem;\n}\n.header {\n  display: grid;\n  grid-template-columns: auto max-content;\n  justify-content: left;\n  grid-gap: 1rem;\n}\n.block {\n  display: grid;\n  grid-gap: .5rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import CreateTest from '@/components/Test/CreateTest';\nimport Test from '@/api/admin/Test';\nimport Block from '@/api/admin/Block';\nimport YPopupWarn from \"@/components/UI/YPopupWarn.vue\";\nimport mainConf, { ProjectState } from \"../../../../main.conf\";\nimport YPopup from \"@/components/UI/YPopup.vue\";\nfunction update(data) {\n  const test = new Test();\n  test.get(data.id).then(res => {\n    if (res.ok) {\n      res.json().then(r => data.test = r.body);\n    } else {\n      this.$store.commit('openErrorPopup', res.msg());\n    }\n  });\n  const block = new Block();\n  block.getAll({\n    filters: {\n      exclude_test: data.id\n    }\n  }).then(res => {\n    if (res.ok) {\n      res.json().then(r => {\n        data.blocks = r.body.map(el => {\n          el.name = el.company ? `(${el.company.name}) ` + el.name : `(Шаблон) ` + el.name;\n          return el;\n        });\n      });\n    } else {\n      this.$store.commit('openErrorPopup', res.msg());\n    }\n  });\n}\nexport default {\n  name: \"EditTest\",\n  components: {\n    YPopup,\n    YPopupWarn,\n    CreateTest\n  },\n  props: {\n    id: Number\n  },\n  data() {\n    return {\n      test: {},\n      blocks: []\n    };\n  },\n  created() {\n    update(this);\n  },\n  methods: {\n    close() {\n      this.$emit('close');\n    },\n    selectBlocks(n) {\n      let block = this.blocks.filter(el => el.id === n.id);\n      block = block[0];\n      if ('active' in block) {\n        block.active = !block.active;\n      } else {\n        block['active'] = true;\n      }\n    },\n    async addToBlock() {\n      const blocks = this.blocks.filter(el => el.active);\n      if (blocks.length === 0) {\n        this.$store.commit('openErrorPopup', \"Вы должны выбрать блоки!\");\n        return;\n      }\n      const body = {\n        tests: [this.id]\n      };\n      const test = new Test();\n      const __this = this;\n      await Promise.all(blocks.map(async block => {\n        await test.addToBlock(block.id, body).then(async res => {\n          if (res.ok) {\n            return true;\n          } else {\n            if (res.err.status === 409) {\n              throw Error(\"409\");\n            } else {\n              throw Error(res.msg());\n            }\n          }\n        });\n      })).then(() => {\n        __this.$store.commit('openPopup', `Тест ${this.test.title} успешно добавлен в выбранные блоки`);\n        update(__this);\n      }).catch(err => {\n        if (err === '409') __this.$store.commit('openErrorPopup', \"Тест уже добавлен в блок\");else __this.$store.commit('openErrorPopup', res.msg());\n      });\n    },\n    removeTest() {\n      this.$store.commit('openWarnPopup', {\n        message: `Вы уверены что хотите удалить этот тест?`,\n        acceptCallback: () => {\n          const test = new Test();\n          test.remove(this.test.id).then(res => {\n            if (res.ok) {\n              this.$store.commit('openPopup', \"Тест успешно удален!\");\n              this.$emit('close');\n              this.close();\n            } else {\n              this.$store.commit('openErrorPopup', res.msg());\n              if (mainConf.projectState === ProjectState.dev) console.log(res);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["CreateTest","Test","Block","YPopupWarn","mainConf","ProjectState","YPopup","update","data","test","get","id","then","res","ok","json","r","body","$store","commit","msg","block","getAll","filters","exclude_test","blocks","map","el","name","company","components","props","Number","created","methods","close","$emit","selectBlocks","n","filter","active","addToBlock","length","tests","__this","Promise","all","err","status","Error","title","catch","removeTest","message","acceptCallback","remove","projectState","dev","console","log"],"sourceRoot":"","sources":["/home/yan/Документы/psyreply2.0_front/admin/src/components/Test/EditTest.vue"],"sourcesContent":["<template>\n  <y-modal class=\"main\">\n    <y-popup-warn></y-popup-warn>\n    <header class=\"header\">\n      <y-left-arrow-button @click=\"close\" />\n      <h1>Редактирование: {{test.title}}</h1>\n    </header>\n\n    <create-test\n      :test-id=\"id\"\n      :title=\"test.title\"\n    />\n\n    <y-modal class=\"block\" v-if=\"blocks.length > 0\">\n      <header>\n        <h2 class=\"heading\">Добавить в блок</h2>\n      </header>\n      <y-list\n        key-of-name=\"name\"\n        :selectable=\"true\"\n        :items=\"blocks\"\n        @select=\"selectBlocks\"\n      />\n      <y-cool-button @click=\"addToBlock\">Добавить в блок</y-cool-button>\n    </y-modal>\n\n    <y-modal class=\"block\">\n      <h2 class=\"heading\">Опасная зона</h2>\n      <y-cool-button @click=\"removeTest\">Удалить тест</y-cool-button>\n    </y-modal>\n  </y-modal>\n</template>\n\n<script>\nimport CreateTest from '@/components/Test/CreateTest';\n\nimport Test from '@/api/admin/Test';\nimport Block from '@/api/admin/Block';\nimport YPopupWarn from \"@/components/UI/YPopupWarn.vue\";\nimport mainConf, {ProjectState} from \"../../../../main.conf\";\nimport YPopup from \"@/components/UI/YPopup.vue\";\n\nfunction update(data) {\n  const test = new Test()\n  test.get(data.id)\n    .then(res => {\n      if (res.ok) {\n        res.json().then(r => data.test = r.body)\n      } else {\n        this.$store.commit('openErrorPopup', res.msg())\n      }\n    })\n\n  const block = new Block()\n  block.getAll({ filters: {exclude_test: data.id} })\n    .then(res => {\n      if (res.ok) {\n        res.json().then(r => {\n          data.blocks = r.body.map(el => {\n            el.name = (el.company) ? `(${el.company.name}) ` + el.name : `(Шаблон) ` + el.name\n            return el;\n          })\n        })\n      } else {\n        this.$store.commit('openErrorPopup', res.msg())\n      }\n    })\n}\n\nexport default {\n  name: \"EditTest\",\n  components: {\n    YPopup,\n    YPopupWarn,\n    CreateTest\n  },\n  props: {\n    id: Number\n  },\n  data() {\n    return {\n      test: {},\n      blocks: []\n    }\n  },\n  created() {\n    update(this)\n  },\n  methods: {\n    close() {\n      this.$emit('close')\n    },\n    selectBlocks(n) {\n      let block = this.blocks.filter(el => el.id === n.id)\n      block = block[0]\n      if ('active' in block) {\n        block.active = !block.active\n      } else {\n        block['active'] = true\n      }\n    },\n    async addToBlock() {\n      const blocks = this.blocks.filter(el => el.active)\n\n      if (blocks.length === 0) {\n        this.$store.commit('openErrorPopup', \"Вы должны выбрать блоки!\")\n        return;\n      }\n\n      const body = {\n        tests: [this.id]\n      }\n\n      const test = new Test()\n      const __this = this;\n      await Promise.all(blocks.map(async block => {\n        await test.addToBlock(block.id, body)\n          .then(async res => {\n            if (res.ok) {\n              return true;\n            } else {\n              if (res.err.status === 409) {\n                throw Error(\"409\");\n              } else {\n                throw Error(res.msg())\n              }\n            }\n          })\n      })).then(() => {\n        __this.$store.commit('openPopup', `Тест ${this.test.title} успешно добавлен в выбранные блоки`)\n        update(__this);\n      }).catch(err => {\n        if (err === '409')\n          __this.$store.commit('openErrorPopup', \"Тест уже добавлен в блок\")\n        else\n          __this.$store.commit('openErrorPopup', res.msg())\n      })\n\n    },\n    removeTest() {\n      this.$store.commit('openWarnPopup', {\n        message: `Вы уверены что хотите удалить этот тест?`,\n        acceptCallback: () => {\n          const test = new Test()\n          test.remove(this.test.id)\n            .then(res => {\n              if (res.ok) {\n                this.$store.commit('openPopup', \"Тест успешно удален!\")\n                this.$emit('close')\n                this.close()\n              } else {\n                this.$store.commit('openErrorPopup', res.msg());\n                if (mainConf.projectState === ProjectState.dev)\n                  console.log(res)\n              }\n            })\n        }\n      });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.main {\n  display: grid;\n  grid-gap: 1rem;\n}\n.header {\n  display: grid;\n  grid-template-columns: auto max-content;\n  justify-content: left;\n  grid-gap: 1rem;\n}\n.block {\n  display: grid;\n  grid-gap: .8rem;\n}\nhr {\n  margin-top: 30px;\n  margin-bottom: 30px;\n  min-width: 30vw;\n  border-left: 0px solid white;\n  border-right: 0px solid white;\n  border-bottom: 0px solid white;\n  border-top: 1px solid rgba(255, 255, 255, 0.52);\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
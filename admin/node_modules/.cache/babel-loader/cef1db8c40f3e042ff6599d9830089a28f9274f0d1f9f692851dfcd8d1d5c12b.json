{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a912c93a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_question_type1 = _resolveComponent(\"question-type1\");\n  const _component_question_type2 = _resolveComponent(\"question-type2\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$props.type === 1 || $props.type === 3 || $props.type === 4 || $props.type === 5 ? (_openBlock(), _createBlock(_component_question_type1, {\n    key: 0,\n    \"question-id\": $props.questionId,\n    onRemove: _cache[0] || (_cache[0] = $event => _ctx.$emit('remove'))\n  }, null, 8 /* PROPS */, [\"question-id\"])) : $props.type === 2 ? (_openBlock(), _createBlock(_component_question_type2, {\n    key: 1,\n    \"question-id\": $props.questionId,\n    onRemove: _cache[1] || (_cache[1] = $event => _ctx.$emit('remove'))\n  }, null, 8 /* PROPS */, [\"question-id\"])) : _createCommentVNode(\"v-if\", true), _hoisted_1], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;gEAWEA,oBAAI;;;;;6DATIC,WAAI,UAAUA,WAAI,UAAUA,WAAI,UAAUA,WAAI,wBADtDC,aAIEC;;IAFC,aAAW,EAAEF,iBAAU;IACvBG,QAAM,sCAAEC,UAAK;8CAGHJ,WAAI,wBADjBC,aAIEI;;IAFC,aAAW,EAAEL,iBAAU;IACvBG,QAAM,sCAAEC,UAAK;iFAEhBE,UAAI","names":["_createElementVNode","$props","_createBlock","_component_question_type1","onRemove","_ctx","_component_question_type2","_hoisted_1"],"sourceRoot":"","sources":["/home/yan/Документы/psyreply2.0_front/admin/src/components/Test/Question.vue"],"sourcesContent":["<template>\n  <question-type1\n    v-if=\"type === 1 || type === 3 || type === 4 || type === 5\"\n    :question-id=\"questionId\"\n    @remove=\"$emit('remove')\"\n  />\n  <question-type2\n    v-else-if=\"type === 2\"\n    :question-id=\"questionId\"\n    @remove=\"$emit('remove')\"\n  />\n  <hr>\n</template>\n\n<script>\nimport QuestionType1 from '@/components/Test/QuestionTypes/QuestionType1';\nimport QuestionType2 from '@/components/Test/QuestionTypes/QuestionType2';\n\nexport default {\n  name: \"question\",\n  components: {\n    QuestionType1, QuestionType2\n  },\n  emits: ['remove'],\n  props: [\n    'questionId',\n    'type'\n  ],\n}\n</script>\n\n<style scoped>\nhr {\n  margin-top: 30px;\n  margin-bottom: 30px;\n  min-width: 30vw;\n  border-left: 0px solid white;\n  border-right: 0px solid white;\n  border-bottom: 0px solid white;\n  border-top: 1px solid rgba(255, 255, 255, 0.52);\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, createTextVNode as _createTextVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3f98c1f1\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"main\"\n};\nconst _hoisted_3 = {\n  class: \"header\"\n};\nconst _hoisted_4 = {\n  class: \"header__select\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"heading header__heading\"\n};\nconst _hoisted_6 = {\n  class: \"company__date__select\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"filters\"\n};\nconst _hoisted_8 = {\n  class: \"export-block\"\n};\nconst _hoisted_9 = {\n  key: 2,\n  class: \"new__results\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_y_left_side_bar = _resolveComponent(\"y-left-side-bar\");\n  const _component_y_select = _resolveComponent(\"y-select\");\n  const _component_YButton = _resolveComponent(\"YButton\");\n  const _component_y_date = _resolveComponent(\"y-date\");\n  const _component_y_input = _resolveComponent(\"y-input\");\n  const _component_export_excel = _resolveComponent(\"export-excel\");\n  const _component_y_cool_button = _resolveComponent(\"y-cool-button\");\n  const _component_y_results_list_item = _resolveComponent(\"y-results-list-item\");\n  const _component_y_results_list = _resolveComponent(\"y-results-list\");\n  const _component_y_modal = _resolveComponent(\"y-modal\");\n  const _component_y_dashboard = _resolveComponent(\"y-dashboard\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_y_left_side_bar), _createElementVNode(\"main\", _hoisted_2, [$data.window === 'main' ? (_openBlock(), _createBlock(_component_y_modal, {\n    key: 0,\n    class: \"main__modal\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"header\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [$data.blocks.length <= 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"Результаты\")) : (_openBlock(), _createBlock(_component_y_select, {\n      key: 1,\n      \"font-size\": \"2\",\n      selects: $data.blocks,\n      onSelect: $options.updateBlocksSelect\n    }, null, 8 /* PROPS */, [\"selects\", \"onSelect\"])), _createElementVNode(\"div\", null, [_createVNode(_component_YButton, {\n      onClick: $options.previousPage,\n      class: _normalizeClass({\n        'hide-pagination': !$options.showPrev\n      })\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"назад\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\", \"class\"]), _createVNode(_component_YButton, {\n      onClick: $options.nextPage,\n      class: _normalizeClass({\n        'hide-pagination': !$options.showNext\n      })\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"вперед\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\", \"class\"])])]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_y_select, {\n      selects: $data.companies,\n      onSelect: $options.updateCompaniesSelect\n    }, null, 8 /* PROPS */, [\"selects\", \"onSelect\"]), _createVNode(_component_y_date, {\n      onUpdateDate: $options.setDateFilter\n    }, null, 8 /* PROPS */, [\"onUpdateDate\"])])]), $data.filters.block_id ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createVNode(_component_y_input, {\n      class: \"week_input\",\n      \"font-size\": \"1\",\n      modelValue: $data.filters.week,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.filters.week = $event),\n      modelModifiers: {\n        trim: true\n      },\n      placeholder: \"Номер недели\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createElementVNode(\"div\", _hoisted_8, [_createVNode(_component_y_select, {\n      selects: $data.groups,\n      onSelect: $options.updateGroupSelect\n    }, null, 8 /* PROPS */, [\"selects\", \"onSelect\"]), $data.filters.week != null && $data.filters.week != '' ? (_openBlock(), _createBlock(_component_y_cool_button, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_createVNode(_component_export_excel, {\n        data: $data.onExport\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" Статистика по выбранным \")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"data\"])]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true), $data.results.length > 0 ? (_openBlock(), _createBlock(_component_y_results_list, {\n      key: 1\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.pagineteData, result => {\n        return _openBlock(), _createBlock(_component_y_results_list_item, {\n          name: result.block_title,\n          id: result.user.jetBotId,\n          username: result.user.login,\n          week: result.week,\n          row: result,\n          valid: result.approved,\n          date: result.createdAt,\n          onEdit: $event => $options.openEditWindow(result),\n          selectable: $data.filters.week != null && $data.filters.week != '',\n          onSelect: $event => $options.result_selected(result),\n          active: result.active\n        }, null, 8 /* PROPS */, [\"name\", \"id\", \"username\", \"week\", \"row\", \"valid\", \"date\", \"onEdit\", \"selectable\", \"onSelect\", \"active\"]);\n      }), 256 /* UNKEYED_FRAGMENT */))]),\n\n      _: 1 /* STABLE */\n    })) : (_openBlock(), _createElementBlock(\"p\", _hoisted_9, _toDisplayString($options.answerMessage), 1 /* TEXT */))]),\n\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), $data.window === 'dashboard' ? (_openBlock(), _createBlock(_component_y_modal, {\n    key: 1\n  }, {\n    default: _withCtx(() => [_createVNode(_component_y_dashboard, {\n      block: $data.editBlock,\n      onClose: $options.closeEditWindow\n    }, null, 8 /* PROPS */, [\"block\", \"onClose\"])]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), $data.window === 'stat' ? (_openBlock(), _createBlock(_component_y_modal, {\n    key: 2\n  })) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_y_left_side_bar","_createElementVNode","_hoisted_2","$data","_createBlock","_component_y_modal","_hoisted_3","_hoisted_4","length","_hoisted_5","_component_y_select","selects","onSelect","$options","_component_YButton","onClick","_hoisted_6","_component_y_date","onUpdateDate","block_id","_hoisted_7","_component_y_input","week","trim","placeholder","_hoisted_8","_component_y_cool_button","key","_component_export_excel","data","_component_y_results_list","_Fragment","result","_component_y_results_list_item","name","block_title","id","user","jetBotId","username","login","row","valid","approved","date","createdAt","onEdit","selectable","active","_hoisted_9","_component_y_dashboard","block","onClose"],"sourceRoot":"","sources":["/home/yan/Документы/psyreply2.0_front/admin/src/views/ResultsView.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <y-left-side-bar />\n\n    <main class=\"main\">\n\n      <y-modal v-if=\"window === 'main'\" class=\"main__modal\">\n        <header class=\"header\">\n          <div class=\"header__select\">\n\n            <div v-if=\"blocks.length <= 1\" class=\"heading header__heading\">Результаты</div>\n            <y-select\n              v-else\n              font-size=\"2\"\n              :selects=\"blocks\"\n              @select=\"updateBlocksSelect\"\n            />\n            <div >\n              <YButton @click=\"previousPage\" :class=\"{'hide-pagination': !showPrev}\">назад</YButton>\n              <YButton @click=\"nextPage\" :class=\"{'hide-pagination': !showNext}\">вперед</YButton>\n            </div>\n          </div>\n          <div class=\"company__date__select\">\n            <y-select\n              :selects=\"companies\"\n              @select=\"updateCompaniesSelect\"\n            />\n            <y-date\n              @update-date=\"setDateFilter\"\n            />\n          </div>\n        </header>\n        <div class=\"filters\" v-if=\"filters.block_id\">\n          <y-input\n              class=\"week_input\"\n              font-size=\"1\"\n              v-model.trim=\"filters.week\"\n              placeholder=\"Номер недели\"\n          />\n          <div class=\"export-block\">\n            <y-select\n                :selects=\"groups\"\n                @select=\"updateGroupSelect\"\n            />\n            <y-cool-button v-if=\"filters.week != null && filters.week != ''\">\n              <export-excel\n                  :data = \"onExport\">\n                Статистика по выбранным\n              </export-excel>\n            </y-cool-button>\n          </div>\n        </div>\n        <y-results-list v-if=\"results.length > 0\">\n          <y-results-list-item\n            v-for=\"result in pagineteData\"\n            :name=\"result.block_title\"\n            :id=\"result.user.jetBotId\"\n            :username=\"result.user.login\"\n            :week=\"result.week\"\n            :row=\"result\"\n            :valid=\"result.approved\"\n            :date=\"result.createdAt\"\n            @edit=\"openEditWindow(result)\"\n            :selectable=\"filters.week != null && filters.week != ''\"\n            @select=\"result_selected(result)\"\n            :active=\"result.active\"\n          />\n        </y-results-list>\n        <p class=\"new__results\" v-else>\n          {{ answerMessage }}\n        </p>\n      </y-modal>\n      <y-modal v-if=\"window === 'dashboard'\">\n          <y-dashboard\n            :block=\"editBlock\"\n            @close=\"closeEditWindow\"\n          />\n      </y-modal>\n      <y-modal v-if=\"window === 'stat'\">\n\n      </y-modal>\n    </main>\n  </div>\n</template>\n\n<script>\nimport YSelect from \"@/components/UI/YSelect\";\nimport YDate from \"@/components/UI/YDate\";\nimport YPopup from \"@/components/UI/YPopup\";\nimport YPopupError from \"@/components/UI/YPopupError\";\nimport YResultsListItem from \"@/components/UI/YResultsListItem\";\nimport YResultsList from \"@/components/Results/YResultsList\";\nimport YDashboard from \"@/components/Results/YDashboard\";\n\nimport Company from '@/api/admin/Company';\nimport Results from '@/api/admin/Results';\nimport Block from '@/api/admin/Block';\nimport YList from \"@/components/UI/YList\";\nimport YListItem from \"@/components/UI/YListItem\";\nimport YCoolButton from \"@/components/UI/YCoolButton\";\n\nfunction update(data) {\n    const results = new Results()\n    let options = data.filters;\n    const { week, ...filters } = options;\n\n    if (data.filters.week != \"\")\n      filters.week = week;\n\n    results.getAll({ filters })\n      .then(res => {\n        if(res.ok) {\n          res.json().then(data => data.body).then(r => {\n            let results = []\n            r.forEach(el => {\n              const old = data.results.filter(a => a.id == el.id);\n              if (old.length)\n                el.active = old[0].active;\n              results.push(el)\n            })\n            data.results = results;\n          })\n        } else {\n          data.$store.commit('openErrorPopup', 'Не удалось загрузить результаты')\n        }\n      })\n}\n\nexport default {\n  name: \"RelultsView\",\n  components: {\n    YCoolButton,\n    YListItem,\n    YList,\n    YResultsList,\n    YResultsListItem,\n    YPopupError,\n    YPopup,\n    YDate,\n    YSelect,\n    YDashboard,\n  },\n  created() {\n    this.$watch(\n        () => this.$route.params,\n        (toParams, previousParams) => {\n          if (toParams.after === '')\n            this.window = 'main'\n        }\n    )\n    this.$watch(\n        () => this.filters.week,\n        () => {\n          update(this)\n        }\n    )\n    update(this)\n    this.companies.push({ })\n    this.companies.forEach(el => el['active'] = false)\n    this.companies[0]['name'] = 'Все компании'\n    this.companies[0]['id'] = null\n    this.companies[0]['active'] = true\n    const company = new Company()\n    company.getAllCompanies()\n      .then(res => {\n        if (res.ok) {\n          res.json().then(data => data.body).then(r => {\n            r.forEach(el => {\n              el.active = false\n              this.companies.push(el)\n            })\n          })\n        }\n      })\n  },\n  data() {\n    return {\n      window: 'main',\n      results: [],\n      companies: [],\n      groups: [],\n      blocks: [],\n      filters: {},\n      editBlock: null,\n      haveResults: false,\n      onExport: [],\n      pageNumber: 0,\n      maxPage: 100,\n    }\n  },\n  methods: {\n    nextPage(){\n      if (this.showNext)\n        this.pageNumber++;\n    },\n    previousPage(){\n      if (this.showPrev)\n        this.pageNumber--;\n    },\n    async result_selected(n) {\n      if (n.active)\n        n.active = false;\n      else\n        n.active = true;\n\n      const filtered = this.results.filter(el => el.active);\n      const results = new Results();\n      if (!filtered.length)\n        return {};\n      const stat = await results.getStat(filtered.map(el => el.id))\n\n      const onExport = filtered.map(res => {\n        const resMetric = JSON.parse(res.data);\n        let metricObject = {};\n        resMetric.map(el => {\n          metricObject[stat.metrics[el.metric_id].name] = el.value;\n        });\n        return {\n          \"Название блока\": res.block.name,\n          \"Логин\": res.user.login,\n          \"Jet Bot ID\": res.user.jetBotId,\n          \"Дата прохождения\": res.createdAt,\n          \"Номер недели\": res.week,\n          ...metricObject\n        }\n      });\n\n      let statMetricObject = {}\n      Object.keys(stat.metrics).map(el => {\n        const metric = stat.metrics[el];\n        let metricSum = 0;\n        metric.values.map(el => {\n          metricSum += el;\n        })\n        statMetricObject[metric.name] = (metricSum / metric.values.length).toFixed(2);\n      })\n\n      onExport.push({\n        \"Название блока\": filtered[0].block.name,\n        \"Логин\": \"\",\n        \"JetBotId\": \"\",\n        \"Дата прохождения\": \"\",\n        \"Номер недели\": filtered[0].week,\n        ...statMetricObject\n      })\n\n      this.onExport = onExport;\n    },\n    getCompanyGroups() {\n      const company = new Company();\n      company.getGroups(this.filters.company_id).then(res => {\n        this.groups = res.map(el => {\n          return {\n            active: false,\n            name: el.name,\n            id: el.id\n          }\n        })\n        this.groups.push({\n          active: true,\n          name: \"Группа\",\n          id: 0\n        })\n      })\n    },\n\n    updateGroupSelect(n) {\n      for (let i = 0; i < this.groups.length; i++) {\n        if (this.groups[i].id == n.id) {\n          this.filters.group_id = n.id;\n          this.groups[i].active = true;\n        } else {\n          if (this.groups[i].active)\n            this.groups[i].active = false;\n        }\n      }\n      update(this);\n    },\n\n    updateCompaniesSelect(n) {\n      this.companies.map(el => {\n        el.active = el.id === n.id;\n      })\n      const select = this.companies.filter(el => el.active)\n\n      if (select[0].id) {\n        this.filters = {\n          company_id: select[0].id\n        }\n      } else {\n        delete this.filters.company_id\n      }\n\n\n      if (this.filters.company_id) {\n        this.blocks = []\n        const block = new Block()\n        this.blocks.push({ })\n        this.blocks.forEach(el => el['active'] = false)\n        this.blocks[0]['name'] = 'Все блоки'\n        this.blocks[0]['id'] = null\n        this.blocks[0]['active'] = true\n        block.getAll({ filters: { company_id: this.filters.company_id } })\n          .then(res => {\n            if (res.ok) {\n              res.json().then(data => data.body).then(r => {\n                r.forEach(el => {\n                  el.active = false\n                  this.blocks.push(el)\n                })\n              })\n            } else {\n              this.$store.commit('openErrorPopup', 'Не удалось загрузить блоки компании')\n            }\n          })\n      } else {\n        delete this.filters.block_id\n        this.blocks = []\n      }\n\n      this.getCompanyGroups();\n      update(this)\n    },\n\n    updateBlocksSelect(n) {\n      this.blocks.map(el => {\n        el.active = el.id === n.id;\n      })\n\n      const select = this.blocks.filter(el => el.active)\n\n      if (select[0].id) {\n        this.filters.week = \"\";\n        this.filters.block_id = select[0].id\n      } else {\n        delete this.filters.block_id\n      }\n\n      update(this)\n    },\n\n    openEditWindow(obj) {\n      this.$router.push('/results/edit')\n      this.$store.commit('setEditBlock', obj)\n      this.window = 'dashboard'\n    },\n    closeEditWindow() {\n      this.window = 'main'\n      this.$router.push('/results')\n      this.$store.commit('removeEditBlock')\n      update(this)\n    },\n    setDateFilter(n) {\n      if (n) {\n        this.filters.createdAt = n\n      } else {\n        delete this.filters.createdAt\n      }\n      update(this)\n    }\n  },\n  computed: {\n    pagineteData(){\n      const start = this.pageNumber * 8, end = start + 8\n      return this.results.slice(start,end)\n    },\n    showNext() {\n      return (this.pageNumber  <= Math.floor(this.results.length / 8))\n    },\n    showPrev() {\n      return this.pageNumber > 0;\n    },\n    answerMessage() {\n      const filters = this.filters\n      if ('createdAt' in filters && 'company_id' in filters && 'block_id' in filters) {\n        const company = this.companies.filter(el => el.active)\n        const block = this.blocks.filter(el => el.active)\n        const date = this.filters.createdAt.split('-')\n\n        const msg = `В компании ${company[0].name} в блоке ${block[0].name} за ${date[2]}/${date[1]}/${date[0]} ничего не найдено`\n        return msg\n      } else if ('block_id' in filters && 'company_id' in filters) {\n        const company = this.companies.filter(el => el.active)\n        const block = this.blocks.filter(el => el.active)\n\n        const msg = `В компании ${company[0].name} в блоке ${block[0].name} ничего не найдено`\n        return msg\n      } else if ('createdAt' in filters && 'company_id' in filters) {\n        const company = this.companies.filter(el => el.active)\n        const date = this.filters.createdAt.split('-')\n\n        const msg = `В компании ${company[0].name} за ${date[2]}/${date[1]}/${date[0]} ничего не найдено`\n        return msg\n      } else if ('company_id' in filters) {\n        const company = this.companies.filter(el => el.active)\n\n        const msg = `В компании ${company[0].name} ничего не найдено`\n        return msg\n      } else if ('createdAt' in filters) {\n        const date = this.filters.createdAt.split('-')\n\n        const msg = `За ${date[2]}/${date[1]}/${date[0]} ничего не найдено`\n        return msg\n      } else {\n        return 'Здесь будут отображаться результаты компаний. Для начала, укажите компанию, либо дату'\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.wrapper {\n  display: grid;\n  grid-template-columns: min-content 1fr;\n  width: 100%;\n}\n\n.main {\n  padding: 4.125rem;\n}\n.main__modal {\n  display: grid;\n  grid-gap: 2.5625rem;\n}\n\n.header {\n  display: grid;\n  grid-template-columns: auto min-content;\n}\n.header__select{\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  justify-content: left;\n\n}\n.header__heading{\n  margin-right: 0.5rem;\n  font-size:2rem;\n}\n.header__arrow__button img{\n  width: 26px;\n  height: 26px;\n  margin-right: 20px;\n  cursor: pointer;\n}\n.company__date__select{\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: left;\n}\n.new__results{\n  text-align: center;\n  align-items: center;\n  font-size: 2rem;\n\n}\n\n.filters {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.week_input {\n  width: 20%;\n}\n\n.export-block {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n.hide-pagination {\n  color: rgb(255, 11, 56);\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
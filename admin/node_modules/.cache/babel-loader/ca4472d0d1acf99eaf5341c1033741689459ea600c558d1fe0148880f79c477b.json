{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-17cdc262\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"header\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"heading\"\n}, \"Новый блок\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_y_left_arrow_button = _resolveComponent(\"y-left-arrow-button\");\n  const _component_y_input = _resolveComponent(\"y-input\");\n  const _component_y_modal = _resolveComponent(\"y-modal\");\n  const _component_y_button = _resolveComponent(\"y-button\");\n  const _component_y_list = _resolveComponent(\"y-list\");\n  const _component_y_cool_button = _resolveComponent(\"y-cool-button\");\n  const _component_create_test = _resolveComponent(\"create-test\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$data.window === 'main' ? (_openBlock(), _createBlock(_component_y_modal, {\n    key: 0,\n    class: \"modal\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"header\", _hoisted_1, [_createVNode(_component_y_left_arrow_button, {\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('close'))\n    }), _hoisted_2, _createVNode(_component_y_modal, {\n      class: \"time-picker\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Время на прохождение - \"), _createVNode(_component_y_input, {\n        max: \"99\",\n        min: \"0\",\n        type: \"number\",\n        modelValue: $data.block.hours,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.block.hours = $event),\n        placeholder: \"чч\",\n        class: \"time-picker__input\"\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _createTextVNode(\": \"), _createVNode(_component_y_input, {\n        max: \"59\",\n        min: \"0\",\n        type: \"number\",\n        modelValue: $data.block.minutes,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.block.minutes = $event),\n        placeholder: \"мм\",\n        class: \"time-picker__input\"\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _createTextVNode(\": \"), _createVNode(_component_y_input, {\n        max: \"59\",\n        min: \"0\",\n        type: \"number\",\n        modelValue: $data.block.seconds,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.block.seconds = $event),\n        placeholder: \"сс\",\n        class: \"time-picker__input\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_y_button, {\n      onClick: $options.createTest,\n      plus: true\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Добавить тест\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]), _createVNode(_component_y_input, {\n      modelValue: $data.block.name,\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.block.name = $event),\n      modelModifiers: {\n        trim: true\n      },\n      placeholder: \"Название блока\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_y_list, {\n      items: $data.tests,\n      \"key-of-name\": \"title\",\n      selectable: true,\n      onSelect: $options.selectTest,\n      size: 5,\n      pagination: true\n    }, null, 8 /* PROPS */, [\"items\", \"onSelect\"]), _createVNode(_component_y_cool_button, {\n      onClick: $options.saveBlock\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Сохранить блок\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), $data.window === 'createTest' ? (_openBlock(), _createBlock(_component_create_test, {\n    key: 1,\n    onClose: $options.createTestClosed\n  }, null, 8 /* PROPS */, [\"onClose\"])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EAEYA,KAAK,EAAC;AAAQ;gEAEpBC,oBAAmC;EAA/BD,KAAK,EAAC;AAAS,GAAC,YAAU;;;;;;;;;;6DAHLE,YAAM,6BAAnCC,aA2BUC;;IA3BDJ,KAAK,EAAC;;sBACb,MAYS,CAZTC,oBAYS,UAZTI,UAYS,GAXPC,aAA+CC;MAAzBC,OAAK,sCAAEC,UAAK;QAClCC,UAAmC,EAEnCJ,aAIUF;MAJDJ,KAAK,EAAC;IAAa;wBAAC,MAC3B,kBAD2B,yBAC3B,gBAA2GW;QAAlGC,GAAG,EAAC,IAAI;QAACC,GAAG,EAAC,GAAG;QAACC,IAAI,EAAC,QAAQ;oBAAUZ,WAAK,CAACa,KAAK;mEAAXb,WAAK,CAACa,KAAK;QAAEC,WAAW,EAAC,IAAI;QAAChB,KAAK,EAAC;gEAAsB,IAC3G,gBAA6GW;QAApGC,GAAG,EAAC,IAAI;QAACC,GAAG,EAAC,GAAG;QAACC,IAAI,EAAC,QAAQ;oBAAUZ,WAAK,CAACe,OAAO;mEAAbf,WAAK,CAACe,OAAO;QAAED,WAAW,EAAC,IAAI;QAAChB,KAAK,EAAC;gEAAsB,IAC7G,gBAA6GW;QAApGC,GAAG,EAAC,IAAI;QAACC,GAAG,EAAC,GAAG;QAACC,IAAI,EAAC,QAAQ;oBAAUZ,WAAK,CAACgB,OAAO;mEAAbhB,WAAK,CAACgB,OAAO;QAAEF,WAAW,EAAC,IAAI;QAAChB,KAAK,EAAC;;;QAGzFM,aAAmEa;MAAxDX,OAAK,EAAEY,mBAAU;MAAGC,IAAI,EAAE;;wBAAM,MAAa,kBAAb,eAAa;;sCAG1Df,aAGEK;kBAFcT,WAAK,CAACoB,IAAI;iEAAVpB,WAAK,CAACoB,IAAI;sBAAxB;QAAAC;MAAA,CAAyB;MACzBP,WAAW,EAAC;6CAEdV,aAOEkB;MANCC,KAAK,EAAEvB,WAAK;MACb,aAAW,EAAC,OAAO;MAClBwB,UAAU,EAAE,IAAI;MAChBC,QAAM,EAAEP,mBAAU;MAClBQ,IAAI,EAAE,CAAC;MACPC,UAAU,EAAE;oDAEfvB,aAAgEwB;MAAhDtB,OAAK,EAAEY;IAAS;wBAAE,MAAc,kBAAd,gBAAc;;;;2CAI1ClB,YAAM,mCADdC,aAGE4B;;IADCC,OAAK,EAAEZ","names":["class","_createElementVNode","$data","_createBlock","_component_y_modal","_hoisted_1","_createVNode","_component_y_left_arrow_button","onClick","_ctx","_hoisted_2","_component_y_input","max","min","type","hours","placeholder","minutes","seconds","_component_y_button","$options","plus","name","trim","_component_y_list","items","selectable","onSelect","size","pagination","_component_y_cool_button","_component_create_test","onClose"],"sourceRoot":"","sources":["/home/yan/Документы/psyreply2.0_front/admin/src/components/Block/CreateBlock.vue"],"sourcesContent":["<template>\n  <y-modal class=\"modal\" v-if=\"window === 'main'\">\n    <header class=\"header\">\n      <y-left-arrow-button @click=\"$emit('close')\" />\n      <h1 class=\"heading\">Новый блок</h1>\n\n      <y-modal class=\"time-picker\">Время на прохождение -\n        <y-input max=\"99\" min=\"0\" type=\"number\" v-model=\"block.hours\" placeholder=\"чч\" class=\"time-picker__input\"/>:\n        <y-input max=\"59\" min=\"0\" type=\"number\" v-model=\"block.minutes\" placeholder=\"мм\" class=\"time-picker__input\"/>:\n        <y-input max=\"59\" min=\"0\" type=\"number\" v-model=\"block.seconds\" placeholder=\"сс\" class=\"time-picker__input\"/>\n      </y-modal>\n\n      <y-button @click=\"createTest\" :plus=\"true\">Добавить тест</y-button>\n\n    </header>\n    <y-input\n      v-model.trim=\"block.name\"\n      placeholder=\"Название блока\"\n    />\n    <y-list\n      :items=\"tests\"\n      key-of-name=\"title\"\n      :selectable=\"true\"\n      @select=\"selectTest\"\n      :size=\"5\"\n      :pagination=\"true\"\n    />\n    <y-cool-button @click=\"saveBlock\">Сохранить блок</y-cool-button>\n  </y-modal>\n\n  <create-test\n    v-if=\"window === 'createTest'\"\n    @close=\"createTestClosed\"\n  />\n</template>\n\n<script>\nimport CreateTest from '@/components/Test/CreateTest';\nimport Test from '@/api/admin/Test'\nimport Block from '@/api/admin/Block';\nimport mainConf, {ProjectState} from \"../../../../main.conf\";\n\nexport default {\n  name: \"CreateBlock\",\n  components: {\n    CreateTest\n  },\n  emits: ['close'],\n  data() {\n    return {\n      window: 'main',\n      block: {\n        name: null,\n        hours: null,\n        minutes: null,\n        seconds: null\n      },\n      tests: []\n    }\n  },\n  created() {\n    this.updateTestList()\n  },\n  methods: {\n    updateTestList() {\n      const test = new Test()\n      test.getAll({ filters: {  } })\n          .then(res => {\n            if (res.ok) {\n              res.json().then(r => this.tests = r.body)\n            } else {\n              this.$store.commit('openErrorPopup', res.msg())\n            }\n          })\n    },\n    createTest() {\n      this.window = 'createTest';\n    },\n    createTestClosed() {\n      this.window = 'main'\n      this.updateTestList()\n    },\n    selectTest(n) {\n      let test = this.tests.filter(el => el.id === n.id)\n      test = test[0]\n      if ('active' in test) {\n        test.active = !test.active\n      } else {\n        test['active'] = true\n      }\n    },\n    saveBlock() {\n      const body = {}\n\n      body.name = this.block.name\n\n      let time = 0\n\n      time += this.block.hours * 60 * 60 * 1000\n      time += this.block.minutes * 60 * 1000\n      time += this.block.seconds * 1000\n\n      body.time = time\n\n      const tests = this.tests.filter(el => el.active)\n\n      body.tests = []\n\n      tests.map(el => body.tests.push(el.id))\n\n      if (mainConf.projectState === ProjectState.dev)\n        console.log(body.test)\n\n      const block = new Block()\n      block.create('', body)\n        .then(res => {\n          if (mainConf.projectState === ProjectState.dev)\n            console.log(res)\n          if (res.ok) {\n            this.$store.commit('openPopup', \"Блок успешно создан!\")\n            this.$emit('close')\n          } else {\n            this.$store.commit('openErrorPopup', res.msg())\n            if (mainConf.projectState === ProjectState.dev)\n              console.log(res)\n          }\n        })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.modal {\n  display: grid;\n  grid-gap: 1rem;\n}\n.header {\n  display: grid;\n  grid-template-columns: auto 1fr auto min-content;\n  grid-gap: 2rem;\n  justify-content: start;\n  align-items: center;\n}\n\n.time-picker {\n  font-size: 1.2rem;\n  padding: .2rem;\n  display: grid;\n  grid-template-columns: auto repeat(3, 3.3rem min-content);\n  align-items: center;\n  grid-gap: .1rem;\n}\n.time-picker__input {\n  padding: .1rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
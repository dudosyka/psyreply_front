{"ast":null,"code":"import config from '@/api/index';\nimport Request from '@/api/index';\nconst req = new Request();\nconst Admin = {};\nAdmin.auth = async function (email, password) {\n  return new Promise((resolve, reject) => {\n    fetch(`${req.host}/auth`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Connection': 'keep-alive'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(async res => {\n      console.log(res);\n      if (res.ok) resolve(res.json().then(data => data.body));else reject(await res.json().then(data => data.body));\n    });\n  });\n};\nAdmin.authCode = async function (code) {\n  return new Promise((resolve, reject) => {\n    fetch(`${req.host}/auth/code`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Connection': 'keep-alive'\n      },\n      body: JSON.stringify({\n        code\n      })\n    }).then(async res => {\n      const token = await res.json().then(r => {\n        localStorage.setItem('token', r.body.token);\n      });\n      resolve(res);\n    }).catch(err => {\n      resolve(err);\n    });\n  });\n};\nAdmin.fuckIn = async function () {\n  return new Promise(resolve => {\n    fetch('').then(async res => {\n      const token = await res.json().then(r => {\n        localStorage.setItem('token', r.body.token);\n      });\n      resolve(res);\n    }).catch(err => resolve(err));\n  });\n};\nAdmin.checkAuth = function () {\n  const token = localStorage.getItem('token');\n  return token !== null;\n};\nAdmin.getToken = function () {\n  return localStorage.getItem('token');\n};\nexport default Admin;","map":{"version":3,"names":["config","Request","req","Admin","auth","email","password","Promise","resolve","reject","fetch","host","method","headers","body","JSON","stringify","then","res","console","log","ok","json","data","authCode","code","token","r","localStorage","setItem","catch","err","fuckIn","checkAuth","getItem","getToken"],"sources":["/home/yan/Документы/psyreply2.0_front/admin/src/api/admin/Auth.js"],"sourcesContent":["import config from '@/api/index';\nimport Request from '@/api/index';\n\nconst req = new Request\n\nconst Admin = {}\n\nAdmin.auth = async function(email, password) {\n  return new Promise((resolve, reject) => {\n    fetch(`${req.host}/auth`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Connection': 'keep-alive'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    })\n      .then(async res => {\n        console.log(res);\n        if (res.ok)\n          resolve(res.json().then(data => data.body))\n        else\n          reject(await res.json().then(data => data.body))\n      })\n  })\n}\n\nAdmin.authCode = async function(code) {\n  return new Promise((resolve, reject) => {\n    fetch(`${req.host}/auth/code`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Connection': 'keep-alive'\n      },\n      body: JSON.stringify({\n        code\n      })\n    })\n      .then(async res => {\n        const token = await res.json().then(r => {\n          localStorage.setItem('token', r.body.token)\n        })\n        resolve(res)\n      })\n      .catch(err => {\n        resolve(err)\n      })\n  })\n}\n\nAdmin.fuckIn = async function() {\n  return new Promise((resolve) => {\n    fetch('')\n      .then(async res => {\n        const token = await res.json().then(r => {\n          localStorage.setItem('token', r.body.token)\n        })\n        resolve(res)\n      })\n      .catch(err => resolve(err))\n  })\n}\n\nAdmin.checkAuth = function() {\n  const token = localStorage.getItem('token')\n  return token !== null\n}\n\nAdmin.getToken = function() {\n  return localStorage.getItem('token')\n}\n\nexport default Admin\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-d78b49fe\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"header\"\n};\nconst _hoisted_2 = {\n  class: \"heading\"\n};\nconst _hoisted_3 = {\n  class: \"header\"\n};\nconst _hoisted_4 = {\n  class: \"heading\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", {\n  class: \"header\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"heading\"\n}, \"Редактирование тестов блока\")], -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", {\n  class: \"header\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"heading\"\n}, \"Добавление тестов в блок\")], -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", {\n  class: \"header\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"heading\"\n}, \"Опасная зона\")], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_y_left_arrow_button = _resolveComponent(\"y-left-arrow-button\");\n  const _component_y_button = _resolveComponent(\"y-button\");\n  const _component_y_input = _resolveComponent(\"y-input\");\n  const _component_y_modal = _resolveComponent(\"y-modal\");\n  const _component_y_cool_button = _resolveComponent(\"y-cool-button\");\n  const _component_y_list = _resolveComponent(\"y-list\");\n  return _openBlock(), _createBlock(_component_y_modal, {\n    class: \"modal\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"header\", _hoisted_1, [_createVNode(_component_y_left_arrow_button, {\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('close'))\n    }), _createElementVNode(\"h1\", _hoisted_2, \"Редактирование: \" + _toDisplayString($data.block.name), 1 /* TEXT */), $data.block.company_id != null ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createVNode(_component_y_button, {\n      plus: true,\n      onClick: _cache[1] || (_cache[1] = $event => $options.generateBlockToken())\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Сгенерировать токен\")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_y_input, {\n      max: \"1000\",\n      min: \"0\",\n      modelValue: $data.block.week,\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.block.week = $event),\n      modelModifiers: {\n        trim: true\n      },\n      type: \"number\"\n    }, null, 8 /* PROPS */, [\"modelValue\"])], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]), _createVNode(_component_y_modal, null, {\n      default: _withCtx(() => [_createElementVNode(\"header\", _hoisted_3, [_createElementVNode(\"h2\", _hoisted_4, \"Изменение параметров \" + _toDisplayString($data.block.name), 1 /* TEXT */)]), _createVNode(_component_y_input, {\n        modelValue: $data.block.name,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.block.name = $event),\n        modelModifiers: {\n          trim: true\n        }\n      }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_y_modal, {\n        class: \"time-picker\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Время на прохождение - \"), _createVNode(_component_y_input, {\n          max: \"99\",\n          min: \"0\",\n          type: \"number\",\n          modelValue: $data.newTime.hours,\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.newTime.hours = $event),\n          placeholder: \"чч\",\n          class: \"time-picker__input\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createTextVNode(\": \"), _createVNode(_component_y_input, {\n          max: \"59\",\n          min: \"0\",\n          type: \"number\",\n          modelValue: $data.newTime.minutes,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.newTime.minutes = $event),\n          placeholder: \"мм\",\n          class: \"time-picker__input\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createTextVNode(\": \"), _createVNode(_component_y_input, {\n          max: \"59\",\n          min: \"0\",\n          type: \"number\",\n          modelValue: $data.newTime.seconds,\n          \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.newTime.seconds = $event),\n          placeholder: \"сс\",\n          class: \"time-picker__input\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_y_cool_button, {\n        onClick: $options.updateBlock\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Сохранить обновленный \" + _toDisplayString($data.block.name), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    }), $data.block.tests.length > 0 ? (_openBlock(), _createBlock(_component_y_modal, {\n      key: 0\n    }, {\n      default: _withCtx(() => [_hoisted_5, $data.block.tests.length > 0 ? (_openBlock(), _createBlock(_component_y_list, {\n        key: 0,\n        \"key-of-name\": \"title\",\n        items: $data.block.tests,\n        selectable: true,\n        onSelect: $options.selectAddTest\n      }, null, 8 /* PROPS */, [\"items\", \"onSelect\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_y_cool_button, {\n        onClick: $options.removeTests\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Удалить тест из блока\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), $data.tests.length > 0 ? (_openBlock(), _createBlock(_component_y_modal, {\n      key: 1\n    }, {\n      default: _withCtx(() => [_hoisted_6, _createVNode(_component_y_list, {\n        selectable: true,\n        onSelect: $options.selectRemoveTest,\n        items: $data.tests,\n        \"key-of-name\": \"title\"\n      }, null, 8 /* PROPS */, [\"onSelect\", \"items\"]), _createVNode(_component_y_cool_button, {\n        onClick: $options.addTests\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Добавить в блок\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_y_modal, null, {\n      default: _withCtx(() => [_hoisted_7, _createVNode(_component_y_cool_button, {\n        onClick: $options.removeBlock\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Удалить блок\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","_createBlock","_component_y_modal","_hoisted_1","_createVNode","_component_y_left_arrow_button","onClick","_ctx","_hoisted_2","$data","name","company_id","_createElementBlock","_Fragment","key","_component_y_button","plus","$options","_component_y_input","max","min","week","trim","type","_hoisted_3","_hoisted_4","hours","placeholder","minutes","seconds","_component_y_cool_button","tests","length","_hoisted_5","_component_y_list","items","selectable","onSelect","_hoisted_6","_hoisted_7"],"sourceRoot":"","sources":["/home/yan/Документы/psyreply2.0_front/admin/src/components/Block/EditBlock.vue"],"sourcesContent":["<template>\n  <y-modal class=\"modal\">\n    <header class=\"header\">\n      <y-left-arrow-button @click=\"$emit('close')\" />\n      <h1 class=\"heading\">Редактирование: {{ block.name }}</h1>\n      <template v-if=\"block.company_id != null\">\n        <y-button :plus=\"true\" @click=\"generateBlockToken()\">Сгенерировать токен</y-button>\n        <y-input max=\"1000\" min=\"0\" v-model.trim=\"block.week\" type=\"number\" />\n      </template>\n    </header>\n\n    <y-modal>\n      <header class=\"header\">\n        <h2 class=\"heading\">Изменение параметров {{ block.name }}</h2>\n      </header>\n      <y-input v-model.trim=\"block.name\" />\n      <y-modal class=\"time-picker\">Время на прохождение -\n        <y-input max=\"99\" min=\"0\" type=\"number\" v-model=\"newTime.hours\" placeholder=\"чч\" class=\"time-picker__input\"/>:\n        <y-input max=\"59\" min=\"0\" type=\"number\" v-model=\"newTime.minutes\" placeholder=\"мм\" class=\"time-picker__input\"/>:\n        <y-input max=\"59\" min=\"0\" type=\"number\" v-model=\"newTime.seconds\" placeholder=\"сс\" class=\"time-picker__input\"/>\n      </y-modal>\n      <y-cool-button @click=\"updateBlock\">Сохранить обновленный {{ block.name }}</y-cool-button>\n    </y-modal>\n\n    <y-modal v-if=\"block.tests.length > 0\">\n      <header class=\"header\">\n        <h2 class=\"heading\">Редактирование тестов блока</h2>\n      </header>\n      <y-list\n        v-if=\"block.tests.length > 0\"\n        key-of-name=\"title\"\n        :items=\"block.tests\"\n        :selectable=\"true\"\n        @select=\"selectAddTest\"\n      />\n      <y-cool-button @click=\"removeTests\">Удалить тест из блока</y-cool-button>\n    </y-modal>\n\n    <y-modal v-if=\"tests.length > 0\">\n      <header class=\"header\">\n        <h2 class=\"heading\">Добавление тестов в блок</h2>\n      </header>\n      <y-list\n        :selectable=\"true\"\n        @select=\"selectRemoveTest\"\n        :items=\"tests\"\n        key-of-name=\"title\"\n      />\n      <y-cool-button @click=\"addTests\">Добавить в блок</y-cool-button>\n    </y-modal>\n    <y-modal>\n      <header class=\"header\">\n        <h2 class=\"heading\">Опасная зона</h2>\n      </header>\n      <y-cool-button @click=\"removeBlock\">Удалить блок</y-cool-button>\n    </y-modal>\n\n  </y-modal>\n</template>\n\n<script>\nimport Block from '@/api/admin/Block';\nimport YCoolButton from '@/components/UI/YCoolButton';\nimport Test from '@/api/admin/Test';\nimport YPopupWarn from \"@/components/UI/YPopupWarn\";\nimport mainConf, {ProjectState} from \"../../../../main.conf\";\n\nfunction update(data) {\n  const block = new Block()\n  block.get(data.id)\n    .then(res => {\n      if (res.ok) {\n        res.json().then(res => {\n          const r = res.body;\n          data.block = r\n          data.block.week = parseInt(data.block.week)\n\n          const hours = Math.floor(r.time / (60 * 60 * 1000))\n          r.time -= hours * 60 * 60 * 1000\n          const minutes = Math.floor(r.time / (60 * 1000))\n          r.time -= minutes * 60 * 1000\n          const seconds = Math.floor(r.time / 1000)\n\n          data.newTime = { hours, minutes, seconds }\n        })\n      } else {\n        this.$store.commit('openErrorPopup', res.msg())\n      }\n    })\n\n  const test = new Test()\n  test.getAll({ filters: { \"except_block\": data.id } })\n    .then(res => {\n      if (res.ok) {\n        res.json().then(r => data.tests = r.body)\n      } else {\n        this.$store.commit('openErrorPopup', res.msg())\n        if (mainConf.projectState === ProjectState.dev)\n          console.log(res)\n      }\n    })\n}\n\nexport default {\n  name: \"EditBlock\",\n  components: {YCoolButton, YPopupWarn},\n\n  props: ['id'],\n  data() {\n    return {\n      tests: [],\n      block: {\n        tests: [],\n      },\n      newTime: {\n        hours: null,\n        minutes: null,\n        seconds: null\n      }\n    }\n  },\n  created() {\n    update(this)\n  },\n  methods: {\n    async generateBlockToken() {\n      const block = new Block();\n      await block.generateToken(this.block).then(res => {\n        window.prompt(\"Нажмите Ctrl+C\", JSON.parse(res).body);\n      });\n    },\n    update() {\n      update(this)\n    },\n    selectAddTest(n) {\n      if (mainConf.projectState === ProjectState.dev)\n        console.log(n)\n      //this.block.tests.forEach(el => el.active = false)\n      let test = this.block.tests.filter(el => el.id === n.id)\n      test = test[0]\n      if ('active' in test) {\n        test.active = !test.active\n      } else {\n        test['active'] = true\n      }\n    },\n    selectRemoveTest(n) {\n      if (mainConf.projectState === ProjectState.dev)\n        console.log(n)\n      //this.tests.forEach(el => el.active = false)\n      let test = this.tests.filter(el => el.id === n.id)\n      test = test[0]\n      if ('active' in test) {\n        test.active = !test.active\n      } else {\n        test['active'] = true\n      }\n    },\n    removeTests() {\n      const test = new Test()\n\n      const removeTests = this.block.tests.filter(el => el.active)\n\n      if (removeTests.length === 0) {\n        return this.$store.commit('openErrorPopup', 'Выберите тест для добавления')\n      }\n\n      const body = {\n        tests: []\n      }\n\n      removeTests.forEach(el => body.tests.push(el.id))\n\n      test.removeFromBlock(this.id, body)\n        .then(res => {\n          if (res.ok) {\n            this.$store.commit('openPopup', `Тесты успешно удалены из ${this.block.name}`)\n            this.update()\n          } else {\n            this.$store.commit('closeErrorPopup', res.msg())\n          }\n        })\n    },\n    addTests() {\n      const test = new Test()\n\n      const addTests = this.tests.filter(el => el.active)\n\n      if (addTests.length === 0) {\n        return this.$store.commit('openErrorPopup', 'Выберите тест для добавления')\n      }\n\n      const body = {\n        tests: []\n      }\n\n      addTests.forEach(el => body.tests.push(el.id))\n\n      test.addToBlock(this.id, body)\n        .then(res => {\n          if (res.ok) {\n            this.$store.commit('openPopup', `Тесты добавлены в ${this.block.name}`)\n            this.update()\n          } else {\n            this.$store.commit('openErrorPopup', res.msg())\n          }\n        })\n    },\n    updateBlock() {\n      if (this.block.name.length < 1) {\n        return this.$store.commit('openErrorPopup', 'Название слишком короткое')\n      }\n\n      let time = 0\n\n      time += this.newTime.hours * 60 * 60 * 1000\n      time += this.newTime.minutes * 60 * 1000\n      time += this.newTime.seconds * 1000\n\n      const block = new Block()\n      const body = {\n        name: this.block.name,\n        time\n      }\n      block.update(this.id, body)\n        .then(res=> {\n          if (res.ok) {\n            this.$store.commit('openPopup', 'Блок успешно сохранен')\n            this.update()\n          } else {\n            this.$store.commit('openErrorPopup', res.msg())\n          }\n        })\n    },\n    removeBlock() {\n      this.$store.commit('openWarnPopup', { message: \"Вы уверены, что хотите удалить блок? (Удаление блока НЕ повлечёт за собой удаление тестов внутри него)\", acceptCallback: () => {\n        const block = new Block()\n\n        const body = {\n          blocks: [this.id]\n        }\n\n        block.remove(body)\n            .then(res => {\n              if (res.ok) {\n                this.$store.commit('openPopup', \"Блок успешно удален!\")\n                this.$emit('close')\n              } else {\n                this.$store.commit('openErrorPopup', res.msg)\n              }\n            })\n      }})\n    }\n  }\n}\n</script>\n\n<style scoped>\n.modal {\n  display: grid;\n  grid-gap: 1rem;\n}\n.header {\n  display: grid;\n  grid-template-columns: auto 1fr min-content min-content;\n  grid-gap: 2rem;\n  justify-content: start;\n  align-items: center;\n}\n.time-picker {\n  font-size: 1.2rem;\n  padding: .2rem 1rem;\n  display: grid;\n  grid-template-columns: min-content repeat(3, 3.3rem min-content);\n  align-items: center;\n  grid-gap: .1rem;\n  white-space: nowrap;\n}\n.time-picker__input {\n  padding: .1rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
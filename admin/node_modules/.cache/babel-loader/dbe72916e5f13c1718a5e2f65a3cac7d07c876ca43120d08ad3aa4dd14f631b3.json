{"ast":null,"code":"import User from \"@/api/admin/User\";\nimport Group from \"@/api/admin/Group\";\nimport Company from \"@/api/admin/Company\";\nimport mainConf, { ProjectState } from \"../../../../main.conf\";\nexport default {\n  name: \"EditGroup\",\n  data() {\n    return {\n      company: {},\n      group: {},\n      users: [],\n      inGroupUsers: []\n    };\n  },\n  async created() {\n    await this.update();\n  },\n  methods: {\n    async update() {\n      this.company = this.$store.state.company;\n      this.group = this.$store.state.group;\n      const user = new User();\n      this.users = (await user.getAll({\n        except_group_id: this.group.id\n      })).map(el => {\n        el.active = false;\n        return el;\n      });\n      this.group.users = this.group.users.map(el => {\n        el.active = false;\n        return el;\n      });\n    },\n    selectUser(n) {\n      n.active = !n.active;\n    },\n    deleteFromGroup() {\n      const group = new Group();\n      const users = this.group.users.filter(el => el.active).map(el => el.id);\n      if (mainConf.projectState === ProjectState.dev) console.log(this.group.id, users);\n      group.removeUsers(this.group.id, users).then(res => {\n        const company = new Company();\n        company.get(this.company.id, res => res.json().then(data => data.body)).then(company => {\n          this.$store.commit('setEditCompany', company);\n          this.$store.commit('setEditGroup', company.groups.filter(el => el.id == this.group.id)[0]);\n          this.update();\n        });\n      });\n    },\n    addUsers() {\n      const group = new Group();\n      const users = this.users.filter(el => el.active).map(el => parseInt(el.id));\n      if (mainConf.projectState === ProjectState.dev) console.log(this.group.id, users);\n      group.update(this.group.id, {\n        name: this.group.name,\n        users\n      }).then(res => {\n        const company = new Company();\n        company.get(this.company.id, res => res.json().then(data => data.body)).then(company => {\n          this.$store.commit('setEditCompany', company);\n          this.$store.commit('setEditGroup', company.groups.filter(el => el.id == this.group.id)[0]);\n          this.update();\n        });\n      });\n    },\n    remove() {\n      const group = new Group();\n      group.remove(this.group.id).then(res => {\n        const company = new Company();\n        company.get(this.company.id, res => res.json().then(data => data.body)).then(company => {\n          this.$store.commit('setEditCompany', company);\n          this.$store.commit('setEditGroup', null);\n          this.$emit('close');\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["User","Group","Company","mainConf","ProjectState","name","data","company","group","users","inGroupUsers","created","update","methods","$store","state","user","getAll","except_group_id","id","map","el","active","selectUser","n","deleteFromGroup","filter","projectState","dev","console","log","removeUsers","then","res","get","json","body","commit","groups","addUsers","parseInt","remove","$emit"],"sourceRoot":"","sources":["/home/yan/Документы/psyreply2.0_front/admin/src/components/Group/EditGroup.vue"],"sourcesContent":["<template>\n  <header class=\"header\">\n    <y-left-arrow-button @click=\"$emit('close')\" />\n    <h1>Редактирование группы {{group.name}}</h1>\n  </header>\n  <y-modal\n      class=\"block\"\n  >\n    <header>\n      <h2 class=\"heading\">Основная информация</h2>\n    </header>\n    <y-input placeholder=\"Название\" v-model.trim=\"group.name\" />\n    <y-cool-button @click=\"addUsers\">Сохранить</y-cool-button>\n  </y-modal>\n  <y-modal\n      class=\"block\"\n  >\n    <header>\n      <h2 class=\"heading\">Пользователи в группе</h2>\n    </header>\n    <y-list\n        :items=\"group.users\"\n        key-of-name=\"login\"\n        show-id=\"jetBotId\"\n        :selectable=\"true\"\n        @select=\"selectUser\"\n    />\n    <y-cool-button v-if=\"group.users.length > 1\" @click=\"deleteFromGroup\">Удалить выбранных из группы</y-cool-button>\n  </y-modal>\n  <y-modal\n      class=\"block\"\n  >\n    <header>\n      <h2 class=\"heading\">Добавление пользователей в группу</h2>\n    </header>\n    <y-list\n        :items=\"users\"\n        key-of-name=\"login\"\n        show-id=\"jetBotId\"\n        :selectable=\"true\"\n        @select=\"selectUser\"\n    />\n    <y-cool-button v-if=\"users.length > 1\" @click=\"addUsers\">Добавить</y-cool-button>\n  </y-modal>\n  <y-cool-button @click=\"remove\">Удалить</y-cool-button>\n</template>\n\n<script>\nimport User from \"@/api/admin/User\";\nimport Group from \"@/api/admin/Group\";\nimport Company from \"@/api/admin/Company\";\nimport mainConf, {ProjectState} from \"../../../../main.conf\";\n\nexport default {\n  name: \"EditGroup\",\n  data() {\n    return {\n      company: {},\n      group: {},\n      users: [],\n      inGroupUsers: []\n    }\n  },\n  async created() {\n    await this.update();\n  },\n  methods: {\n    async update() {\n      this.company = this.$store.state.company;\n      this.group = this.$store.state.group;\n\n      const user = new User();\n\n      this.users = (await user.getAll({\n        except_group_id: this.group.id\n      })).map(el => {\n        el.active = false;\n        return el;\n      });\n      this.group.users = this.group.users.map(el => {\n        el.active = false;\n        return el;\n      })\n    },\n    selectUser(n) {\n      n.active = !n.active;\n    },\n    deleteFromGroup() {\n      const group = new Group();\n      const users = this.group.users.filter(el => el.active).map(el => el.id);\n      if (mainConf.projectState === ProjectState.dev)\n        console.log(this.group.id, users);\n      group.removeUsers(this.group.id, users).then(res => {\n        const company = new Company();\n        company.get(this.company.id, res => res.json().then(data => data.body)).then(company => {\n          this.$store.commit('setEditCompany', company);\n          this.$store.commit('setEditGroup', company.groups.filter(el => el.id == this.group.id)[0])\n          this.update();\n        })\n      });\n    },\n    addUsers() {\n      const group = new Group();\n      const users = this.users.filter(el => el.active).map(el => parseInt(el.id));\n      if (mainConf.projectState === ProjectState.dev)\n        console.log(this.group.id, users)\n      group.update(this.group.id, {\n        name: this.group.name,\n        users\n      }).then(res => {\n        const company = new Company();\n        company.get(this.company.id, res => res.json().then(data => data.body)).then(company => {\n          this.$store.commit('setEditCompany', company);\n          this.$store.commit('setEditGroup', company.groups.filter(el => el.id == this.group.id)[0])\n          this.update();\n        })\n      });\n    },\n    remove() {\n      const group = new Group();\n      group.remove(this.group.id).then(res => {\n        const company = new Company();\n        company.get(this.company.id, res => res.json().then(data => data.body)).then(company => {\n          this.$store.commit('setEditCompany', company);\n          this.$store.commit('setEditGroup', null)\n          this.$emit('close');\n        })\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.header {\n  display: grid;\n  grid-template-columns: auto max-content;\n  justify-content: left;\n  grid-gap: 1rem;\n}\n.block {\n  display: grid;\n  grid-gap: .5rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
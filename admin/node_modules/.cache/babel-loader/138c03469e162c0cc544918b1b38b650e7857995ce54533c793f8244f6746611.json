{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-08c69639\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"header\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"heading\"\n}, \"Добавить в блок\")], -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"heading\"\n}, \"Опасная зона\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_y_popup_warn = _resolveComponent(\"y-popup-warn\");\n  const _component_y_left_arrow_button = _resolveComponent(\"y-left-arrow-button\");\n  const _component_create_test = _resolveComponent(\"create-test\");\n  const _component_y_list = _resolveComponent(\"y-list\");\n  const _component_y_cool_button = _resolveComponent(\"y-cool-button\");\n  const _component_y_modal = _resolveComponent(\"y-modal\");\n  return _openBlock(), _createBlock(_component_y_modal, {\n    class: \"main\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_y_popup_warn), _createElementVNode(\"header\", _hoisted_1, [_createVNode(_component_y_left_arrow_button, {\n      onClick: $options.close\n    }, null, 8 /* PROPS */, [\"onClick\"]), _createElementVNode(\"h1\", null, \"Редактирование: \" + _toDisplayString($data.test.title), 1 /* TEXT */)]), _createVNode(_component_create_test, {\n      \"test-id\": $props.id,\n      title: $data.test.title\n    }, null, 8 /* PROPS */, [\"test-id\", \"title\"]), $data.blocks.length > 0 ? (_openBlock(), _createBlock(_component_y_modal, {\n      key: 0,\n      class: \"block\"\n    }, {\n      default: _withCtx(() => [_hoisted_2, _createVNode(_component_y_list, {\n        \"key-of-name\": \"name\",\n        selectable: true,\n        items: $data.blocks,\n        onSelect: $options.selectBlocks\n      }, null, 8 /* PROPS */, [\"items\", \"onSelect\"]), _createVNode(_component_y_cool_button, {\n        onClick: $options.addToBlock\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Добавить в блок\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_y_modal, {\n      class: \"block\"\n    }, {\n      default: _withCtx(() => [_hoisted_3, _createVNode(_component_y_cool_button, {\n        onClick: $options.removeTest\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Удалить тест\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;;EAGYA,KAAK,EAAC;AAAQ;gEAWpBC,oBAES,8BADPA,oBAAwC;EAApCD,KAAK,EAAC;AAAS,GAAC,iBAAe;gEAYrCC,oBAAqC;EAAjCD,KAAK,EAAC;AAAS,GAAC,cAAY;;;;;;;;;uBA1BpCE,aA6BUC;IA7BDH,KAAK,EAAC;EAAM;sBACnB,MAA6B,CAA7BI,aAA6BC,0BAC7BJ,oBAGS,UAHTK,UAGS,GAFPF,aAAsCG;MAAhBC,OAAK,EAAEC;IAAK,sCAClCR,oBAAuC,YAAnC,kBAAgB,oBAAES,UAAI,CAACC,KAAK,oBAGlCP,aAGEQ;MAFC,SAAO,EAAEC,SAAE;MACXF,KAAK,EAAED,UAAI,CAACC;mDAGcD,YAAM,CAACI,MAAM,sBAA1CZ,aAWUC;;MAXDH,KAAK,EAAC;;wBACb,MAES,CAFTe,UAES,EACTX,aAKEY;QAJA,aAAW,EAAC,MAAM;QACjBC,UAAU,EAAE,IAAI;QAChBC,KAAK,EAAER,YAAM;QACbS,QAAM,EAAEV;sDAEXL,aAAkEgB;QAAlDZ,OAAK,EAAEC;MAAU;0BAAE,MAAe,kBAAf,iBAAe;;;;6CAGpDL,aAGUD;MAHDH,KAAK,EAAC;IAAO;wBACpB,MAAqC,CAArCqB,UAAqC,EACrCjB,aAA+DgB;QAA/CZ,OAAK,EAAEC;MAAU;0BAAE,MAAY,kBAAZ,cAAY","names":["class","_createElementVNode","_createBlock","_component_y_modal","_createVNode","_component_y_popup_warn","_hoisted_1","_component_y_left_arrow_button","onClick","$options","$data","title","_component_create_test","$props","length","_hoisted_2","_component_y_list","selectable","items","onSelect","_component_y_cool_button","_hoisted_3"],"sourceRoot":"","sources":["/home/yan/Документы/psyreply2.0_front/admin/src/components/Test/EditTest.vue"],"sourcesContent":["<template>\n  <y-modal class=\"main\">\n    <y-popup-warn></y-popup-warn>\n    <header class=\"header\">\n      <y-left-arrow-button @click=\"close\" />\n      <h1>Редактирование: {{test.title}}</h1>\n    </header>\n\n    <create-test\n      :test-id=\"id\"\n      :title=\"test.title\"\n    />\n\n    <y-modal class=\"block\" v-if=\"blocks.length > 0\">\n      <header>\n        <h2 class=\"heading\">Добавить в блок</h2>\n      </header>\n      <y-list\n        key-of-name=\"name\"\n        :selectable=\"true\"\n        :items=\"blocks\"\n        @select=\"selectBlocks\"\n      />\n      <y-cool-button @click=\"addToBlock\">Добавить в блок</y-cool-button>\n    </y-modal>\n\n    <y-modal class=\"block\">\n      <h2 class=\"heading\">Опасная зона</h2>\n      <y-cool-button @click=\"removeTest\">Удалить тест</y-cool-button>\n    </y-modal>\n  </y-modal>\n</template>\n\n<script>\nimport CreateTest from '@/components/Test/CreateTest';\n\nimport Test from '@/api/admin/Test';\nimport Block from '@/api/admin/Block';\nimport YPopupWarn from \"@/components/UI/YPopupWarn.vue\";\nimport mainConf, {ProjectState} from \"../../../../main.conf\";\nimport YPopup from \"@/components/UI/YPopup.vue\";\n\nfunction update(data) {\n  const test = new Test()\n  test.get(data.id)\n    .then(res => {\n      if (res.ok) {\n        res.json().then(r => data.test = r.body)\n      } else {\n        this.$store.commit('openErrorPopup', res.msg())\n      }\n    })\n\n  const block = new Block()\n  block.getAll({ filters: {exclude_test: data.id} })\n    .then(res => {\n      if (res.ok) {\n        res.json().then(r => {\n          data.blocks = r.body.map(el => {\n            el.name = (el.company) ? `(${el.company.name}) ` + el.name : `(Шаблон) ` + el.name\n            return el;\n          })\n        })\n      } else {\n        this.$store.commit('openErrorPopup', res.msg())\n      }\n    })\n}\n\nexport default {\n  name: \"EditTest\",\n  components: {\n    YPopup,\n    YPopupWarn,\n    CreateTest\n  },\n  props: {\n    id: Number\n  },\n  data() {\n    return {\n      test: {},\n      blocks: []\n    }\n  },\n  created() {\n    update(this)\n  },\n  methods: {\n    close() {\n      this.$emit('close')\n    },\n    selectBlocks(n) {\n      let block = this.blocks.filter(el => el.id === n.id)\n      block = block[0]\n      if ('active' in block) {\n        block.active = !block.active\n      } else {\n        block['active'] = true\n      }\n    },\n    async addToBlock() {\n      const blocks = this.blocks.filter(el => el.active)\n\n      if (blocks.length === 0) {\n        this.$store.commit('openErrorPopup', \"Вы должны выбрать блоки!\")\n        return;\n      }\n\n      const body = {\n        tests: [this.id]\n      }\n\n      const test = new Test()\n      const __this = this;\n      await Promise.all(blocks.map(async block => {\n        await test.addToBlock(block.id, body)\n          .then(async res => {\n            if (res.ok) {\n              return true;\n            } else {\n              if (res.err.status === 409) {\n                throw Error(\"409\");\n              } else {\n                throw Error(res.msg())\n              }\n            }\n          })\n      })).then(() => {\n        __this.$store.commit('openPopup', `Тест ${this.test.title} успешно добавлен в выбранные блоки`)\n        update(__this);\n      }).catch(err => {\n        if (err === '409')\n          __this.$store.commit('openErrorPopup', \"Тест уже добавлен в блок\")\n        else\n          __this.$store.commit('openErrorPopup', res.msg())\n      })\n\n    },\n    removeTest() {\n      this.$store.commit('openWarnPopup', {\n        message: `Вы уверены что хотите удалить этот тест?`,\n        acceptCallback: () => {\n          const test = new Test()\n          test.remove(this.test.id)\n            .then(res => {\n              if (res.ok) {\n                this.$store.commit('openPopup', \"Тест успешно удален!\")\n                this.$emit('close')\n                this.close()\n              } else {\n                this.$store.commit('openErrorPopup', res.msg());\n                if (mainConf.projectState === ProjectState.dev)\n                  console.log(res)\n              }\n            })\n        }\n      });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.main {\n  display: grid;\n  grid-gap: 1rem;\n}\n.header {\n  display: grid;\n  grid-template-columns: auto max-content;\n  justify-content: left;\n  grid-gap: 1rem;\n}\n.block {\n  display: grid;\n  grid-gap: .8rem;\n}\nhr {\n  margin-top: 30px;\n  margin-bottom: 30px;\n  min-width: 30vw;\n  border-left: 0px solid white;\n  border-right: 0px solid white;\n  border-bottom: 0px solid white;\n  border-top: 1px solid rgba(255, 255, 255, 0.52);\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
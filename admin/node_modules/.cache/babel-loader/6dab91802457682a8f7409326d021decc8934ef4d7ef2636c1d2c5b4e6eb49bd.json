{"ast":null,"code":"import Results from '@/api/admin/Results';\nimport User from \"@/api/admin/User\";\nexport default {\n  name: \"YDashboard\",\n  created() {\n    this.metrics = JSON.parse(this.block.data);\n    this.approved = this.block.approved;\n    if (this.block.block.time > 0) {\n      let hours = Math.floor(this.block.block.time / (60 * 60 * 1000));\n      hours = hours < 10 ? `0${hours}` : hours;\n      this.block.block.time -= hours * 60 * 60 * 1000;\n      let minutes = Math.floor(this.block.block.time / (60 * 1000));\n      minutes = minutes < 10 ? `0${minutes}` : minutes;\n      this.block.block.time -= minutes * 60 * 1000;\n      let seconds = Math.floor(this.block.block.time / 1000);\n      seconds = seconds < 10 ? `0${seconds}` : seconds;\n      this.time = `${hours}:${minutes}:${seconds}`;\n    } else {\n      this.time = 'нет временных рамок';\n    }\n    // this.time = this.block.time_on_pass\n\n    if (this.block.time_on_pass > 0) {\n      let hours = Math.floor(this.block.time_on_pass / (60 * 60 * 1000));\n      hours = hours < 10 ? `0${hours}` : hours;\n      this.block.time_on_pass -= hours * 60 * 60 * 1000;\n      let minutes = Math.floor(this.block.time_on_pass / (60 * 1000));\n      this.block.time_on_pass -= minutes * 60 * 1000;\n      let seconds = Math.floor(this.block.time_on_pass / 1000);\n      seconds = seconds < 10 ? `0${seconds}` : seconds;\n      this.block.time_on_pass -= seconds * 1000;\n      const ms = this.block.time_on_pass / 1000;\n      if (ms >= 5000) {\n        seconds += 1;\n      }\n      minutes = minutes < 10 ? `0${minutes}` : minutes;\n      this.timeOnPass = `${hours}:${minutes}:${seconds}`;\n    } else {\n      this.timeOnPass = 0;\n    }\n    this.isTimeValid = this.timeOnPass < this.time;\n  },\n  data() {\n    return {\n      metrics: [],\n      approved: null,\n      time: null,\n      timeOnPass: null,\n      isTimeValid: true\n    };\n  },\n  methods: {\n    updateBlock() {\n      const body = {\n        newData: this.metrics,\n        approved: this.approved\n      };\n      const results = new Results();\n      results.update(this.block.id, body).then(res => {\n        if (res.ok) {\n          this.$store.commit('openPopup', 'Данные сохранены');\n        } else {\n          this.$store.commit('openErrorPopup', res.msg());\n        }\n      });\n    },\n    async openClientDash() {\n      const client = new User();\n      const link = await client.getDashLink(this.$store.getters.editBlock.user.jetBotId).then(res => res.text());\n      window.open(link, \"_blank\");\n    }\n  },\n  computed: {\n    block() {\n      return this.$store.getters.editBlock;\n    },\n    formattedDate() {\n      let date = new Date(this.block.createdAt);\n      const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\n      const month = date.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\n      const year = date.getFullYear();\n      return `${day}/${month}/${year}`;\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["Results","User","name","created","metrics","JSON","parse","block","data","approved","time","hours","Math","floor","minutes","seconds","time_on_pass","ms","timeOnPass","isTimeValid","methods","updateBlock","body","newData","results","update","id","then","res","ok","$store","commit","msg","openClientDash","client","link","getDashLink","getters","editBlock","user","jetBotId","text","window","open","computed","formattedDate","date","Date","createdAt","day","getDate","month","getMonth","year","getFullYear"],"sourceRoot":"","sources":["/home/yan/Документы/psyreply2.0_front/admin/src/components/Results/YDashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <header class=\"header\">\n      <div class=\"header__select\">\n        <y-left-arrow-button @click=\"$emit('close')\" />\n        <h1 class=\"heading header__heading\">{{ block.block_title }}</h1>\n      </div>\n\n        <div @click=\"openClientDash\" class=\"dash__button\">\n          <div class=\"dash__button__title\">Дашборд</div>\n          <img src=\"@/assets/img/dash.svg\" alt=\"\">\n        </div>\n    </header>\n    <div class=\"user\">\n      <div class=\"username\">{{ block.user.login || 'no username' }}</div>\n      <div class=\"line\"></div>\n      <div class=\"id\">{{ block.user.jetBotId || 'no user id' }}</div>\n      <div class=\"line\"></div>\n      <div class=\"date\">{{ formattedDate }}</div>\n      <div class=\"line\"></div>\n      <div class=\"passage\">\n        <p>Время прохождения: </p>\n        <p class=\"passage__user\" :class=\"{ 'passage__user_bad': !isTimeValid }\">{{ timeOnPass }}</p>\n        <span class=\"slash\"> /\n      </span><p class=\"passage__test\">{{ time }}</p>\n      </div>\n    </div>\n    <hr>\n    <div class=\"results__button\">\n      <y-results-tabel>\n        <y-results-tabel-item\n          v-for=\"metric of metrics\"\n          :id=\"metric.metric_id\"\n          :value=\"metric.value\"\n          v-model.number=\"metric.value\"\n        />\n      </y-results-tabel>\n        <div class=\"results__valid\">\n          <div\n            @click=\"approved = !approved\"\n            class=\"elipce\"\n            :class=\"{ 'elipse__bad': !approved }\"></div>\n          <p>Результаты {{ approved ? \"\" : \"не\" }} валидны</p>\n        </div>\n      <y-cool-button @click=\"updateBlock\"><h1>Сохранить изменения</h1></y-cool-button>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport Results from '@/api/admin/Results';\nimport User from \"@/api/admin/User\";\n\nexport default {\n  name: \"YDashboard\",\n  created() {\n    this.metrics = JSON.parse(this.block.data)\n    this.approved = this.block.approved\n\n    if (this.block.block.time > 0) {\n      let hours = Math.floor(this.block.block.time / (60 * 60 * 1000))\n      hours = (hours < 10) ? `0${hours}` : hours\n      this.block.block.time -= hours * 60 * 60 * 1000\n      let minutes = Math.floor(this.block.block.time / (60 * 1000))\n      minutes = (minutes < 10) ? `0${minutes}` : minutes\n      this.block.block.time -= minutes * 60 * 1000\n      let seconds = Math.floor(this.block.block.time / 1000)\n      seconds = (seconds < 10) ? `0${seconds}` : seconds\n\n      this.time = `${hours}:${minutes}:${seconds}`\n    } else {\n      this.time = 'нет временных рамок'\n    }\n    // this.time = this.block.time_on_pass\n\n    if (this.block.time_on_pass > 0) {\n      let hours = Math.floor(this.block.time_on_pass / (60 * 60 * 1000))\n      hours = (hours < 10) ? `0${hours}` : hours\n      this.block.time_on_pass -= hours * 60 * 60 * 1000\n      let minutes = Math.floor(this.block.time_on_pass / (60 * 1000))\n      this.block.time_on_pass -= minutes * 60 * 1000\n      let seconds = Math.floor(this.block.time_on_pass / 1000)\n      seconds = (seconds < 10) ? `0${seconds}` : seconds\n      this.block.time_on_pass -= seconds * 1000\n      const ms = this.block.time_on_pass / 1000\n      if (ms >= 5000) {\n        seconds += 1\n      }\n      minutes = (minutes < 10) ? `0${minutes}` : minutes\n      this.timeOnPass = `${hours}:${minutes}:${seconds}`\n    } else {\n      this.timeOnPass = 0\n    }\n    this.isTimeValid = this.timeOnPass < this.time;\n  },\n  data() {\n    return {\n      metrics: [],\n      approved: null,\n      time: null,\n      timeOnPass: null,\n      isTimeValid: true\n    }\n  },\n  methods: {\n    updateBlock() {\n      const body = {\n        newData: this.metrics,\n        approved: this.approved\n      }\n\n      const results = new Results()\n      results.update(this.block.id, body)\n        .then(res => {\n          if (res.ok) {\n            this.$store.commit('openPopup', 'Данные сохранены')\n          } else {\n            this.$store.commit('openErrorPopup', res.msg())\n          }\n        })\n    },\n    async openClientDash() {\n      const client = new User();\n      const link = await client.getDashLink(this.$store.getters.editBlock.user.jetBotId).then(res => res.text());\n      window.open(link, \"_blank\")\n    }\n  },\n  computed: {\n    block() {\n      return this.$store.getters.editBlock\n    },\n    formattedDate() {\n      let date = new Date(this.block.createdAt)\n      const day = (date.getDate() < 10) ? `0${date.getDate()}` : date.getDate()\n      const month = (date.getMonth() + 1 < 10) ? `0${date.getMonth() + 1}` : date.getMonth() + 1\n      const year = date.getFullYear()\n\n      return `${day}/${month}/${year}`\n    },\n  }\n}\n</script>\n\n<style scoped>\n.dash__button{\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background: rgba(255, 255, 255, 0.16);\n  border-radius: 14px;\n  padding: 1rem;\n  cursor: pointer;\n}\n.dash__button__title{\n  margin-right: 0.5rem;\n}\n.header{\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n}\n.header__select{\n  display: grid;\n  grid-template-columns: auto max-content;\n  justify-content: left;\n  grid-gap: 1rem;\n}\n.user{\n  display: flex;\n  align-items: center;\n  justify-content: left;\n  opacity: 0.5;\n\n}\n.line{\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n  background-color: rgba(255, 255, 255, 0.36);\n  height: 2rem;\n  width: 2px;\n  justify-self: center;\n\n}\n.slash{\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n}\n\ntable{\n  width: 100%;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.26);\n  border-top: 1px solid rgba(255, 255, 255, 0.26);\n\n}\nhr {\n  margin-bottom: 1rem;\n  min-width: 30vh;\n  border-left: 0px solid white;\n  border-right: 0px solid white;\n  border-bottom: 0px solid white;\n  border-top: 1px solid rgba(255, 255, 255, 0.52);\n\n}\n.results__button{\n  display: grid;\n  grid-template-rows: 1fr 1rem 4rem;\n  grid-gap: 3rem;\n}\n.passage{\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n}\n.passage__user{\n  margin-left: 0.5rem;\n  color: rgba(0, 255, 25, 0.66);\n\n}\n.passage__user_bad{\n  color:red;\n}\n\n.elipce{\n  background: linear-gradient(200.42deg, #38F9D7 13.57%, #43E97B 98.35%);\n  width: 0.7rem;\n  height: 0.7rem;\n  border-radius: 50%;\n  margin-right: 0.5rem;\n}\n.elipse__bad {\n  background: linear-gradient(200.42deg, #f93838 13.57%, #e94343 98.35%);\n}\n.results__valid{\n  display: flex;\n  align-items: center;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
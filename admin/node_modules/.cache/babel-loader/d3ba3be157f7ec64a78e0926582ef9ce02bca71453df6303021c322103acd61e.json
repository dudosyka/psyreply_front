{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport YSelect from \"@/components/UI/YSelect\";\nimport YDate from \"@/components/UI/YDate\";\nimport YPopup from \"@/components/UI/YPopup\";\nimport YPopupError from \"@/components/UI/YPopupError\";\nimport YResultsListItem from \"@/components/UI/YResultsListItem\";\nimport YResultsList from \"@/components/Results/YResultsList\";\nimport YDashboard from \"@/components/Results/YDashboard\";\nimport Company from '@/api/admin/Company';\nimport Results from '@/api/admin/Results';\nimport Block from '@/api/admin/Block';\nimport YList from \"@/components/UI/YList\";\nimport YListItem from \"@/components/UI/YListItem\";\nimport YCoolButton from \"@/components/UI/YCoolButton\";\nfunction update(data) {\n  const results = new Results();\n  let options = data.filters;\n  const {\n    week,\n    ...filters\n  } = options;\n  if (data.filters.week != \"\") filters.week = week;\n  results.getAll({\n    filters\n  }).then(res => {\n    if (res.ok) {\n      res.json().then(data => data.body).then(r => {\n        let results = [];\n        r.forEach(el => {\n          const old = data.results.filter(a => a.id == el.id);\n          if (old.length) el.active = old[0].active;\n          results.push(el);\n        });\n        data.results = results;\n      });\n    } else {\n      data.$store.commit('openErrorPopup', 'Не удалось загрузить результаты');\n    }\n  });\n}\nexport default {\n  name: \"RelultsView\",\n  components: {\n    YCoolButton,\n    YListItem,\n    YList,\n    YResultsList,\n    YResultsListItem,\n    YPopupError,\n    YPopup,\n    YDate,\n    YSelect,\n    YDashboard\n  },\n  created() {\n    this.$watch(() => this.$route.params, (toParams, previousParams) => {\n      if (toParams.after === '') this.window = 'main';\n    });\n    this.$watch(() => this.filters.week, () => {\n      update(this);\n    });\n    update(this);\n    this.companies.push({});\n    this.companies.forEach(el => el['active'] = false);\n    this.companies[0]['name'] = 'Все компании';\n    this.companies[0]['id'] = null;\n    this.companies[0]['active'] = true;\n    const company = new Company();\n    company.getAllCompanies().then(res => {\n      if (res.ok) {\n        res.json().then(data => data.body).then(r => {\n          r.forEach(el => {\n            el.active = false;\n            this.companies.push(el);\n          });\n        });\n      }\n    });\n  },\n  data() {\n    return {\n      window: 'main',\n      results: [],\n      companies: [],\n      groups: [],\n      blocks: [],\n      filters: {},\n      editBlock: null,\n      haveResults: false,\n      onExport: [],\n      pageNumber: 0,\n      maxPage: 100\n    };\n  },\n  methods: {\n    nextPage() {\n      if (this.showNext) this.pageNumber++;\n    },\n    previousPage() {\n      if (this.showPrev) this.pageNumber--;\n    },\n    async result_selected(n) {\n      if (n.active) n.active = false;else n.active = true;\n      const filtered = this.results.filter(el => el.active);\n      const results = new Results();\n      if (!filtered.length) return {};\n      const stat = await results.getStat(filtered.map(el => el.id));\n      const onExport = filtered.map(res => {\n        const resMetric = JSON.parse(res.data);\n        let metricObject = {};\n        resMetric.map(el => {\n          metricObject[stat.metrics[el.metric_id].name] = el.value;\n        });\n        return {\n          \"Название блока\": res.block.name,\n          \"Логин\": res.user.login,\n          \"Jet Bot ID\": res.user.jetBotId,\n          \"Дата прохождения\": res.createdAt,\n          \"Номер недели\": res.week,\n          ...metricObject\n        };\n      });\n      let statMetricObject = {};\n      Object.keys(stat.metrics).map(el => {\n        const metric = stat.metrics[el];\n        let metricSum = 0;\n        metric.values.map(el => {\n          metricSum += el;\n        });\n        statMetricObject[metric.name] = (metricSum / metric.values.length).toFixed(2);\n      });\n      onExport.push({\n        \"Название блока\": filtered[0].block.name,\n        \"Логин\": \"\",\n        \"JetBotId\": \"\",\n        \"Дата прохождения\": \"\",\n        \"Номер недели\": filtered[0].week,\n        ...statMetricObject\n      });\n      this.onExport = onExport;\n    },\n    getCompanyGroups() {\n      const company = new Company();\n      company.getGroups(this.filters.company_id).then(res => {\n        this.groups = res.map(el => {\n          return {\n            active: false,\n            name: el.name,\n            id: el.id\n          };\n        });\n        this.groups.push({\n          active: true,\n          name: \"Группа\",\n          id: 0\n        });\n      });\n    },\n    updateGroupSelect(n) {\n      for (let i = 0; i < this.groups.length; i++) {\n        if (this.groups[i].id == n.id) {\n          this.filters.group_id = n.id;\n          this.groups[i].active = true;\n        } else {\n          if (this.groups[i].active) this.groups[i].active = false;\n        }\n      }\n      update(this);\n    },\n    updateCompaniesSelect(n) {\n      this.companies.map(el => {\n        el.active = el.id === n.id;\n      });\n      const select = this.companies.filter(el => el.active);\n      if (select[0].id) {\n        this.filters = {\n          company_id: select[0].id\n        };\n      } else {\n        delete this.filters.company_id;\n      }\n      if (this.filters.company_id) {\n        this.blocks = [];\n        const block = new Block();\n        this.blocks.push({});\n        this.blocks.forEach(el => el['active'] = false);\n        this.blocks[0]['name'] = 'Все блоки';\n        this.blocks[0]['id'] = null;\n        this.blocks[0]['active'] = true;\n        block.getAll({\n          filters: {\n            company_id: this.filters.company_id\n          }\n        }).then(res => {\n          if (res.ok) {\n            res.json().then(data => data.body).then(r => {\n              r.forEach(el => {\n                el.active = false;\n                this.blocks.push(el);\n              });\n            });\n          } else {\n            this.$store.commit('openErrorPopup', 'Не удалось загрузить блоки компании');\n          }\n        });\n      } else {\n        delete this.filters.block_id;\n        this.blocks = [];\n      }\n      this.getCompanyGroups();\n      update(this);\n    },\n    updateBlocksSelect(n) {\n      this.blocks.map(el => {\n        el.active = el.id === n.id;\n      });\n      const select = this.blocks.filter(el => el.active);\n      if (select[0].id) {\n        this.filters.week = \"\";\n        this.filters.block_id = select[0].id;\n      } else {\n        delete this.filters.block_id;\n      }\n      update(this);\n    },\n    openEditWindow(obj) {\n      this.$router.push('/results/edit');\n      this.$store.commit('setEditBlock', obj);\n      this.window = 'dashboard';\n    },\n    closeEditWindow() {\n      this.window = 'main';\n      this.$router.push('/results');\n      this.$store.commit('removeEditBlock');\n      update(this);\n    },\n    setDateFilter(n) {\n      if (n) {\n        this.filters.createdAt = n;\n      } else {\n        delete this.filters.createdAt;\n      }\n      update(this);\n    }\n  },\n  computed: {\n    pagineteData() {\n      const start = this.pageNumber * 8,\n        end = start + 8;\n      return this.results.slice(start, end);\n    },\n    showNext() {\n      return this.pageNumber <= Math.floor(this.results.length / 8);\n    },\n    showPrev() {\n      return this.pageNumber > 0;\n    },\n    answerMessage() {\n      const filters = this.filters;\n      if ('createdAt' in filters && 'company_id' in filters && 'block_id' in filters) {\n        const company = this.companies.filter(el => el.active);\n        const block = this.blocks.filter(el => el.active);\n        const date = this.filters.createdAt.split('-');\n        const msg = `В компании ${company[0].name} в блоке ${block[0].name} за ${date[2]}/${date[1]}/${date[0]} ничего не найдено`;\n        return msg;\n      } else if ('block_id' in filters && 'company_id' in filters) {\n        const company = this.companies.filter(el => el.active);\n        const block = this.blocks.filter(el => el.active);\n        const msg = `В компании ${company[0].name} в блоке ${block[0].name} ничего не найдено`;\n        return msg;\n      } else if ('createdAt' in filters && 'company_id' in filters) {\n        const company = this.companies.filter(el => el.active);\n        const date = this.filters.createdAt.split('-');\n        const msg = `В компании ${company[0].name} за ${date[2]}/${date[1]}/${date[0]} ничего не найдено`;\n        return msg;\n      } else if ('company_id' in filters) {\n        const company = this.companies.filter(el => el.active);\n        const msg = `В компании ${company[0].name} ничего не найдено`;\n        return msg;\n      } else if ('createdAt' in filters) {\n        const date = this.filters.createdAt.split('-');\n        const msg = `За ${date[2]}/${date[1]}/${date[0]} ничего не найдено`;\n        return msg;\n      } else {\n        return 'Здесь будут отображаться результаты компаний. Для начала, укажите компанию, либо дату';\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["YSelect","YDate","YPopup","YPopupError","YResultsListItem","YResultsList","YDashboard","Company","Results","Block","YList","YListItem","YCoolButton","update","data","results","options","filters","week","getAll","then","res","ok","json","body","r","forEach","el","old","filter","a","id","length","active","push","$store","commit","name","components","created","$watch","$route","params","toParams","previousParams","after","window","companies","company","getAllCompanies","groups","blocks","editBlock","haveResults","onExport","pageNumber","maxPage","methods","nextPage","showNext","previousPage","showPrev","result_selected","n","filtered","stat","getStat","map","resMetric","JSON","parse","metricObject","metrics","metric_id","value","block","user","login","jetBotId","createdAt","statMetricObject","Object","keys","metric","metricSum","values","toFixed","getCompanyGroups","getGroups","company_id","updateGroupSelect","i","group_id","updateCompaniesSelect","select","block_id","updateBlocksSelect","openEditWindow","obj","$router","closeEditWindow","setDateFilter","computed","pagineteData","start","end","slice","Math","floor","answerMessage","date","split","msg"],"sourceRoot":"","sources":["/home/yan/Документы/psyreply2.0_front/admin/src/views/ResultsView.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <y-left-side-bar />\n\n    <main class=\"main\">\n\n      <y-modal v-if=\"window === 'main'\" class=\"main__modal\">\n        <header class=\"header\">\n          <div class=\"header__select\">\n\n            <div v-if=\"blocks.length <= 1\" class=\"heading header__heading\">Результаты</div>\n            <y-select\n              v-else\n              font-size=\"2\"\n              :selects=\"blocks\"\n              @select=\"updateBlocksSelect\"\n            />\n          </div>\n          <div class=\"company__date__select\">\n            <y-select\n              :selects=\"companies\"\n              @select=\"updateCompaniesSelect\"\n            />\n            <y-date\n              @update-date=\"setDateFilter\"\n            />\n          </div>\n        </header>\n        <div class=\"filters\" v-if=\"filters.block_id\">\n          <y-input\n              class=\"week_input\"\n              font-size=\"1\"\n              v-model.trim=\"filters.week\"\n              placeholder=\"Номер недели\"\n          />\n          <div class=\"export-block\">\n            <y-select\n                :selects=\"groups\"\n                @select=\"updateGroupSelect\"\n            />\n            <y-cool-button v-if=\"filters.week != null && filters.week != ''\">\n              <export-excel\n                  :data = \"onExport\">\n                Статистика по выбранным\n              </export-excel>\n            </y-cool-button>\n          </div>\n        </div>\n        <y-results-list v-if=\"results.length > 0\">\n          <y-results-list-item\n            v-for=\"result in pagineteData\"\n            :name=\"result.block_title\"\n            :id=\"result.user.jetBotId\"\n            :username=\"result.user.login\"\n            :week=\"result.week\"\n            :row=\"result\"\n            :valid=\"result.approved\"\n            :date=\"result.createdAt\"\n            @edit=\"openEditWindow(result)\"\n            :selectable=\"filters.week != null && filters.week != ''\"\n            @select=\"result_selected(result)\"\n            :active=\"result.active\"\n          />\n        </y-results-list>\n        <div >\n          <YButton @click=\"previousPage\" :class=\"{'hide-pagination': !showPrev}\">назад</YButton>\n          <YButton @click=\"nextPage\" :class=\"{'hide-pagination': !showNext}\">вперед</YButton>\n        </div>\n        <p class=\"new__results\" v-else>\n          {{ answerMessage }}\n        </p>\n      </y-modal>\n      <y-modal v-if=\"window === 'dashboard'\">\n          <y-dashboard\n            :block=\"editBlock\"\n            @close=\"closeEditWindow\"\n          />\n      </y-modal>\n\n      <y-modal v-if=\"window === 'stat'\">\n\n      </y-modal>\n\n    </main>\n  </div>\n</template>\n\n<script>\nimport YSelect from \"@/components/UI/YSelect\";\nimport YDate from \"@/components/UI/YDate\";\nimport YPopup from \"@/components/UI/YPopup\";\nimport YPopupError from \"@/components/UI/YPopupError\";\nimport YResultsListItem from \"@/components/UI/YResultsListItem\";\nimport YResultsList from \"@/components/Results/YResultsList\";\nimport YDashboard from \"@/components/Results/YDashboard\";\n\nimport Company from '@/api/admin/Company';\nimport Results from '@/api/admin/Results';\nimport Block from '@/api/admin/Block';\nimport YList from \"@/components/UI/YList\";\nimport YListItem from \"@/components/UI/YListItem\";\nimport YCoolButton from \"@/components/UI/YCoolButton\";\n\nfunction update(data) {\n    const results = new Results()\n    let options = data.filters;\n    const { week, ...filters } = options;\n\n    if (data.filters.week != \"\")\n      filters.week = week;\n\n    results.getAll({ filters })\n      .then(res => {\n        if(res.ok) {\n          res.json().then(data => data.body).then(r => {\n            let results = []\n            r.forEach(el => {\n              const old = data.results.filter(a => a.id == el.id);\n              if (old.length)\n                el.active = old[0].active;\n              results.push(el)\n            })\n            data.results = results;\n          })\n        } else {\n          data.$store.commit('openErrorPopup', 'Не удалось загрузить результаты')\n        }\n      })\n}\n\nexport default {\n  name: \"RelultsView\",\n  components: {\n    YCoolButton,\n    YListItem,\n    YList,\n    YResultsList,\n    YResultsListItem,\n    YPopupError,\n    YPopup,\n    YDate,\n    YSelect,\n    YDashboard,\n  },\n  created() {\n    this.$watch(\n        () => this.$route.params,\n        (toParams, previousParams) => {\n          if (toParams.after === '')\n            this.window = 'main'\n        }\n    )\n    this.$watch(\n        () => this.filters.week,\n        () => {\n          update(this)\n        }\n    )\n    update(this)\n    this.companies.push({ })\n    this.companies.forEach(el => el['active'] = false)\n    this.companies[0]['name'] = 'Все компании'\n    this.companies[0]['id'] = null\n    this.companies[0]['active'] = true\n    const company = new Company()\n    company.getAllCompanies()\n      .then(res => {\n        if (res.ok) {\n          res.json().then(data => data.body).then(r => {\n            r.forEach(el => {\n              el.active = false\n              this.companies.push(el)\n            })\n          })\n        }\n      })\n  },\n  data() {\n    return {\n      window: 'main',\n      results: [],\n      companies: [],\n      groups: [],\n      blocks: [],\n      filters: {},\n      editBlock: null,\n      haveResults: false,\n      onExport: [],\n      pageNumber: 0,\n      maxPage: 100,\n    }\n  },\n  methods: {\n    nextPage(){\n      if (this.showNext)\n        this.pageNumber++;\n    },\n    previousPage(){\n      if (this.showPrev)\n        this.pageNumber--;\n    },\n    async result_selected(n) {\n      if (n.active)\n        n.active = false;\n      else\n        n.active = true;\n\n      const filtered = this.results.filter(el => el.active);\n      const results = new Results();\n      if (!filtered.length)\n        return {};\n      const stat = await results.getStat(filtered.map(el => el.id))\n\n      const onExport = filtered.map(res => {\n        const resMetric = JSON.parse(res.data);\n        let metricObject = {};\n        resMetric.map(el => {\n          metricObject[stat.metrics[el.metric_id].name] = el.value;\n        });\n        return {\n          \"Название блока\": res.block.name,\n          \"Логин\": res.user.login,\n          \"Jet Bot ID\": res.user.jetBotId,\n          \"Дата прохождения\": res.createdAt,\n          \"Номер недели\": res.week,\n          ...metricObject\n        }\n      });\n\n      let statMetricObject = {}\n      Object.keys(stat.metrics).map(el => {\n        const metric = stat.metrics[el];\n        let metricSum = 0;\n        metric.values.map(el => {\n          metricSum += el;\n        })\n        statMetricObject[metric.name] = (metricSum / metric.values.length).toFixed(2);\n      })\n\n      onExport.push({\n        \"Название блока\": filtered[0].block.name,\n        \"Логин\": \"\",\n        \"JetBotId\": \"\",\n        \"Дата прохождения\": \"\",\n        \"Номер недели\": filtered[0].week,\n        ...statMetricObject\n      })\n\n      this.onExport = onExport;\n    },\n    getCompanyGroups() {\n      const company = new Company();\n      company.getGroups(this.filters.company_id).then(res => {\n        this.groups = res.map(el => {\n          return {\n            active: false,\n            name: el.name,\n            id: el.id\n          }\n        })\n        this.groups.push({\n          active: true,\n          name: \"Группа\",\n          id: 0\n        })\n      })\n    },\n\n    updateGroupSelect(n) {\n      for (let i = 0; i < this.groups.length; i++) {\n        if (this.groups[i].id == n.id) {\n          this.filters.group_id = n.id;\n          this.groups[i].active = true;\n        } else {\n          if (this.groups[i].active)\n            this.groups[i].active = false;\n        }\n      }\n      update(this);\n    },\n\n    updateCompaniesSelect(n) {\n      this.companies.map(el => {\n        el.active = el.id === n.id;\n      })\n      const select = this.companies.filter(el => el.active)\n\n      if (select[0].id) {\n        this.filters = {\n          company_id: select[0].id\n        }\n      } else {\n        delete this.filters.company_id\n      }\n\n\n      if (this.filters.company_id) {\n        this.blocks = []\n        const block = new Block()\n        this.blocks.push({ })\n        this.blocks.forEach(el => el['active'] = false)\n        this.blocks[0]['name'] = 'Все блоки'\n        this.blocks[0]['id'] = null\n        this.blocks[0]['active'] = true\n        block.getAll({ filters: { company_id: this.filters.company_id } })\n          .then(res => {\n            if (res.ok) {\n              res.json().then(data => data.body).then(r => {\n                r.forEach(el => {\n                  el.active = false\n                  this.blocks.push(el)\n                })\n              })\n            } else {\n              this.$store.commit('openErrorPopup', 'Не удалось загрузить блоки компании')\n            }\n          })\n      } else {\n        delete this.filters.block_id\n        this.blocks = []\n      }\n\n      this.getCompanyGroups();\n      update(this)\n    },\n\n    updateBlocksSelect(n) {\n      this.blocks.map(el => {\n        el.active = el.id === n.id;\n      })\n\n      const select = this.blocks.filter(el => el.active)\n\n      if (select[0].id) {\n        this.filters.week = \"\";\n        this.filters.block_id = select[0].id\n      } else {\n        delete this.filters.block_id\n      }\n\n      update(this)\n    },\n\n    openEditWindow(obj) {\n      this.$router.push('/results/edit')\n      this.$store.commit('setEditBlock', obj)\n      this.window = 'dashboard'\n    },\n    closeEditWindow() {\n      this.window = 'main'\n      this.$router.push('/results')\n      this.$store.commit('removeEditBlock')\n      update(this)\n    },\n    setDateFilter(n) {\n      if (n) {\n        this.filters.createdAt = n\n      } else {\n        delete this.filters.createdAt\n      }\n      update(this)\n    }\n  },\n  computed: {\n    pagineteData(){\n      const start = this.pageNumber * 8, end = start + 8\n      return this.results.slice(start,end)\n    },\n    showNext() {\n      return (this.pageNumber  <= Math.floor(this.results.length / 8))\n    },\n    showPrev() {\n      return this.pageNumber > 0;\n    },\n    answerMessage() {\n      const filters = this.filters\n      if ('createdAt' in filters && 'company_id' in filters && 'block_id' in filters) {\n        const company = this.companies.filter(el => el.active)\n        const block = this.blocks.filter(el => el.active)\n        const date = this.filters.createdAt.split('-')\n\n        const msg = `В компании ${company[0].name} в блоке ${block[0].name} за ${date[2]}/${date[1]}/${date[0]} ничего не найдено`\n        return msg\n      } else if ('block_id' in filters && 'company_id' in filters) {\n        const company = this.companies.filter(el => el.active)\n        const block = this.blocks.filter(el => el.active)\n\n        const msg = `В компании ${company[0].name} в блоке ${block[0].name} ничего не найдено`\n        return msg\n      } else if ('createdAt' in filters && 'company_id' in filters) {\n        const company = this.companies.filter(el => el.active)\n        const date = this.filters.createdAt.split('-')\n\n        const msg = `В компании ${company[0].name} за ${date[2]}/${date[1]}/${date[0]} ничего не найдено`\n        return msg\n      } else if ('company_id' in filters) {\n        const company = this.companies.filter(el => el.active)\n\n        const msg = `В компании ${company[0].name} ничего не найдено`\n        return msg\n      } else if ('createdAt' in filters) {\n        const date = this.filters.createdAt.split('-')\n\n        const msg = `За ${date[2]}/${date[1]}/${date[0]} ничего не найдено`\n        return msg\n      } else {\n        return 'Здесь будут отображаться результаты компаний. Для начала, укажите компанию, либо дату'\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.wrapper {\n  display: grid;\n  grid-template-columns: min-content 1fr;\n  width: 100%;\n}\n\n.main {\n  padding: 4.125rem;\n}\n.main__modal {\n  display: grid;\n  grid-gap: 2.5625rem;\n}\n\n.header {\n  display: grid;\n  grid-template-columns: auto min-content;\n}\n.header__select{\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  justify-content: left;\n\n}\n.header__heading{\n  margin-right: 0.5rem;\n  font-size:2rem;\n}\n.header__arrow__button img{\n  width: 26px;\n  height: 26px;\n  margin-right: 20px;\n  cursor: pointer;\n}\n.company__date__select{\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: left;\n}\n.new__results{\n  text-align: center;\n  align-items: center;\n  font-size: 2rem;\n\n}\n\n.filters {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.week_input {\n  width: 20%;\n}\n\n.export-block {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n.hide-pagination {\n  color: rgb(255, 11, 56);\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport CreateBlock from '@/components/Block/CreateBlock';\nimport EditBlock from '@/components/Block/EditBlock';\nimport Block from '@/api/admin/Block';\nimport Company from '@/api/admin/Company';\nimport YPopupWarn from \"@/components/UI/YPopupWarn\";\nfunction update(data) {\n  const block = new Block();\n  block.getAll({\n    filters: {\n      company_id: data.filter\n    }\n  }).then(res => {\n    if (res.ok) {\n      res.json().then(data => data.body).then(r => data.blocks = r);\n    }\n  });\n}\nexport default {\n  name: \"BlockView\",\n  components: {\n    YPopupWarn,\n    CreateBlock,\n    EditBlock\n  },\n  data() {\n    return {\n      window: 'main',\n      blocks: [],\n      editBlockId: null,\n      companies: [],\n      filter: null\n    };\n  },\n  created() {\n    this.$watch(() => this.$route.params, (toParams, previousParams) => {\n      if (toParams.after === '') this.window = 'main';\n    });\n    update(this);\n    const company = new Company();\n    this.companies.push({});\n    this.companies.forEach(el => el['active'] = false);\n    this.companies[0]['name'] = 'Шаблоны';\n    this.companies[0]['id'] = null;\n    this.companies[0]['active'] = true;\n    company.getAllCompanies().then(res => {\n      if (res.ok) {\n        res.json().then(data => data.body).then(r => {\n          r.forEach(el => {\n            el.active = false;\n            this.companies.push(el);\n          });\n        });\n      }\n    });\n  },\n  methods: {\n    editBlock(n) {\n      this.$router.push('/block/edit');\n      this.window = 'editBlock';\n      this.editBlockId = n.id;\n    },\n    createBlock() {\n      this.$router.push('/block/create');\n      this.window = 'createBlock';\n    },\n    updateBlocksList(n) {\n      this.companies.map(el => {\n        el.active = el.id === n.id;\n      });\n      const select = this.companies.filter(el => el.active);\n      this.filter = select[0].id;\n      update(this);\n    },\n    close() {\n      this.$router.push('/block');\n      this.window = 'main';\n      this.companies.map(el => el.active = false);\n      this.companies.map(el => {\n        el.active = el.id === null;\n      });\n      this.filter = null;\n      update(this);\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["CreateBlock","EditBlock","Block","Company","YPopupWarn","update","data","block","getAll","filters","company_id","filter","then","res","ok","json","body","r","blocks","name","components","window","editBlockId","companies","created","$watch","$route","params","toParams","previousParams","after","company","push","forEach","el","getAllCompanies","active","methods","editBlock","n","$router","id","createBlock","updateBlocksList","map","select","close"],"sourceRoot":"","sources":["/home/yan/Документы/psyreply2.0_front/admin/src/views/BlockView.vue"],"sourcesContent":["<template>\n  <y-popup-warn></y-popup-warn>\n  <div class=\"wrapper\">\n    <y-left-side-bar />\n    <main class=\"main\">\n      <y-modal v-if=\"window === 'main'\" class=\"main__modal\">\n        <header class=\"header\">\n          <div class=\"header__select\">\n            <div class=\"heading header__heading\">Блоки</div>\n<!--            <select style=\"color: white\" v-model=\"filter\" @change=\"updateBlocksList\">\n              <option style=\"color: black\" :value=\"null\">Без фильтра</option>\n              <option style=\"color: black\" v-for=\"company of companies\" :value=\"company.id\">{{company.name}}</option>\n            </select>-->\n            <y-select\n                class=\"fs-2\"\n              :selects=\"companies\"\n              @select=\"updateBlocksList\"\n            />\n          </div>\n          <y-button :plus=\"true\" @click=\"createBlock\">Новый блок</y-button>\n        </header>\n<!--        U can add \"items\" props to list component. It must be array -->\n        <y-list\n          key-of-name=\"name\"\n          :editable=\"true\"\n          @edit=\"editBlock\"\n          :items=\"blocks\"\n          :pagination=\"true\"\n          :page-size=\"3\"\n        />\n      </y-modal>\n      <create-block\n        v-if=\"window === 'createBlock'\"\n        @close=\"close\"\n      />\n      <edit-block\n        :id=\"editBlockId\"\n        v-if=\"window === 'editBlock'\"\n        @close=\"close\"\n      />\n    </main>\n  </div>\n</template>\n\n<script>\nimport CreateBlock from '@/components/Block/CreateBlock';\nimport EditBlock from '@/components/Block/EditBlock';\n\nimport Block from '@/api/admin/Block';\nimport Company from '@/api/admin/Company';\nimport YPopupWarn from \"@/components/UI/YPopupWarn\";\n\nfunction update(data) {\n  const block = new Block()\n  block.getAll({filters: { company_id: data.filter }})\n    .then(res => {\n      if (res.ok) {\n        res.json().then(data => data.body).then(r => data.blocks = r)\n      }\n    })\n}\n\nexport default {\n  name: \"BlockView\",\n  components: {\n    YPopupWarn,\n    CreateBlock, EditBlock\n  },\n  data() {\n    return {\n      window: 'main',\n      blocks: [],\n      editBlockId: null,\n      companies: [],\n      filter: null\n    }\n  },\n  created() {\n    this.$watch(\n        () => this.$route.params,\n        (toParams, previousParams) => {\n          if (toParams.after === '')\n            this.window = 'main'\n        }\n    )\n    update(this)\n    const company = new Company()\n    this.companies.push({ })\n    this.companies.forEach(el => el['active'] = false)\n    this.companies[0]['name'] = 'Шаблоны'\n    this.companies[0]['id'] = null\n    this.companies[0]['active'] = true\n    company.getAllCompanies()\n      .then(res => {\n        if (res.ok) {\n          res.json().then(data => data.body).then(r => {\n            r.forEach(el => {\n              el.active = false\n              this.companies.push(el)\n            })\n          })\n        }\n      })\n  },\n  methods: {\n    editBlock(n){\n      this.$router.push('/block/edit')\n      this.window = 'editBlock'\n      this.editBlockId = n.id\n    },\n    createBlock() {\n      this.$router.push('/block/create')\n      this.window = 'createBlock'\n    },\n    updateBlocksList(n) {\n      this.companies.map(el => {\n        el.active = el.id === n.id;\n      })\n      const select = this.companies.filter(el => el.active)\n      this.filter = select[0].id\n      update(this)\n    },\n    close() {\n      this.$router.push('/block')\n      this.window = 'main'\n\n      this.companies.map(el => el.active = false)\n      this.companies.map(el => {\n        el.active = el.id === null;\n      })\n      this.filter = null\n      update(this)\n    },\n  }\n}\n</script>\n\n<style scoped>\n.wrapper {\n  display: grid;\n  grid-template-columns: min-content 1fr;\n  width: 100%;\n}\n\n.main {\n  padding: 4.125rem;\n}\n.main__modal {\n  display: grid;\n  grid-gap: 2.5625rem;\n}\n\n.header {\n  display: grid;\n  grid-template-columns: auto min-content;\n}\n.header__select{\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  justify-content: left;\n\n}\n\n\n.header__heading{\n  margin-right: 0.5rem;\n\n  font-size:2rem;\n}\n.header__arrow__button img{\n  width: 26px;\n  height: 26px;\n  margin-right: 20px;\n  cursor: pointer;\n}\n\n.fs-2 {\n  font-size: 1.3rem;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}